[2022-08-01 01:16:09:2688][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.737+0900', '2022-08-01T01:16:09.737+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 14, 'Aristophanes') 
[2022-08-01 01:16:09:2691][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.746+0900', '2022-08-01T01:16:09.746+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 45, 'Anubis') 
[2022-08-01 01:16:09:2692][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.748+0900', '2022-08-01T01:16:09.748+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 12, 'Kittur Chennamma') 
[2022-08-01 01:16:09:2693][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.748+0900', '2022-08-01T01:16:09.748+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 71, 'Callisto''s Dream') 
[2022-08-01 01:16:09:2693][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.749+0900', '2022-08-01T01:16:09.749+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 94, 'Kingfisher') 
[2022-08-01 01:16:09:2694][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.749+0900', '2022-08-01T01:16:09.749+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 75, 'Hammurabi') 
[2022-08-01 01:16:09:2694][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.750+0900', '2022-08-01T01:16:09.750+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 69, 'Lucien') 
[2022-08-01 01:16:09:2695][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.750+0900', '2022-08-01T01:16:09.750+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 36, 'Knight') 
[2022-08-01 01:16:09:2696][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.751+0900', '2022-08-01T01:16:09.751+0900', 'Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', 95, 'Kittur Chennamma') 
[2022-08-01 01:16:09:2696][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.752+0900', '2022-08-01T01:16:09.752+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 96, 'Lucien') 
[2022-08-01 01:16:09:2697][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.752+0900', '2022-08-01T01:16:09.752+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 53, 'Kingfisher') 
[2022-08-01 01:16:09:2697][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.753+0900', '2022-08-01T01:16:09.753+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 44, 'Anubis') 
[2022-08-01 01:16:09:2699][main] [33m WARN[0;39m o.m.jdbc.message.server.ErrorPacket [36mo.m.j.m.s.ErrorPacket[0;39m [32mwarn[0;39m 
 Error: 1452-23000: Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:16:09:2700][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 2ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:09.753+0900', '2022-08-01T01:16:09.753+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 0, 'Koto') 
[2022-08-01 01:16:09:2700][main] [33m WARN[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 SQL Error: 1452, SQLState: 23000 
[2022-08-01 01:16:09:2700][main] [31mERROR[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 (conn=343) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:16:09:2706][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:09 | OperationTime : 2ms 
[2022-08-01 01:16:09:2717][main] [31mERROR[0;39m o.s.boot.SpringApplication [36mo.s.b.SpringApplication[0;39m [32mreportFailure[0;39m 
 Application run failed 
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.MethodInvocationValidator.invoke(MethodInvocationValidator.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy128.saveAll(Unknown Source)
	at com.example.simpleblog.config.InitData.init(InitData.kt:37)
	at com.example.simpleblog.config.InitData$$FastClassBySpringCGLIB$$45b2271d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.simpleblog.config.InitData$$EnhancerBySpringCGLIB$$970af4c6.init(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:82)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:82)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.simpleblog.SimpleBlogApplicationKt.main(SimpleBlogApplication.kt:28)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy120.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:700)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:88)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 44 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=343) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:288)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:368)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:137)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:819)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:758)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:677)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:620)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:322)
	at org.mariadb.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:299)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.executeUpdate(PreparedStatementWrapper.java:94)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 92 common frames omitted
[2022-08-01 01:16:09:2731][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:16:09:2732][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:16:09:2746][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:16:25:258][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 8719 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:16:25:259][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:16:25:262][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:16:25:598][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:16:25:621][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 20 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:16:25:820][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:16:25:823][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:16:25:824][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:16:25:824][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:16:25:871][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:16:25:872][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 591 ms 
[2022-08-01 01:16:25:954][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:16:25:976][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:16:26:1048][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:16:26:1085][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:16:26:1126][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:16:26:1135][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:16:26:1407][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186417 | took 15ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`; 
[2022-08-01 01:16:26:1416][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186426 | took 8ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`; 
[2022-08-01 01:16:26:1420][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186430 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Comment`
drop table if exists `Comment`; 
[2022-08-01 01:16:26:1423][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186433 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Member`
drop table if exists `Member`; 
[2022-08-01 01:16:26:1430][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186440 | took 6ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Post`
drop table if exists `Post`; 
[2022-08-01 01:16:26:1440][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186450 | took 7ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `post_id` bigint, primary key (`id`)) engine=InnoDB
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `post_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:26:1454][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186464 | took 13ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:26:1481][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186491 | took 26ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:26:1518][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186528 | took 36ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`)
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`); 
[2022-08-01 01:16:26:1542][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284186552 | took 23ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`)
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`); 
[2022-08-01 01:16:26:1543][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:16:26:1562][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:16:27:2105][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:16:27:2117][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:16:27:2122][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.046 seconds (JVM running for 2.325) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elliott.keebler@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dr.kirstin.conroy@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='therese.hyatt@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='myrtle.aufderhar@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='burl.franecki@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='pres.julianna.mayert@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='luciano.flatley@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='davis.rutherford@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='nicholle.mcglynn@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lane.legros@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='andre.white@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ma.lemke@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.brad.schuster@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fr.henriette.haley@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='delora.hagenes.vm@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='randa.harber@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='hector.armstrong@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='virgil.lind@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='isidro.langworth@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fletcher.ledner@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='alfred.simonis@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='boris.hartmann@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='taina.wilkinson@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elton.hyatt@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2136][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='yon.auer@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='porsha.moen.dc@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rosemary.corkery@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='shayne.kuhic.lld@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jimmy.armstrong@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.bo.schinner@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='loren.effertz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='chris.jerde@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='eileen.dooley.jd@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2137][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='malik.douglas@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lanny.huel@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lino.kertzmann@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='angla.maggio@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rene.mcglynn@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='wilber.anderson@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kacie.durgan@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='clark.heidenreich@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='refugia.franecki@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='angeline.emard@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tanja.wunsch@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2138][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='adeline.hegmann@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='yu.rutherford@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elida.reichel@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dustin.marquardt@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='devon.buckridge@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rep.dorthey.reichel@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='soraya.willms.jd@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='zackary.kiehn@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elisha.vandervort@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ernest.botsford@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lanny.rosenbaum@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.angelo.botsford@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2139][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='cristi.dicki@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='coleen.lubowitz@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lezlie.ullrich@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='deanna.kuhlman@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='corina.orn@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='patrina.ruecker@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tyson.altenwerth.phd@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2140][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='bernardo.wolf@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='bebe.johnson.md@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='marg.kihn.ii@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='loyd.bogisich@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='teena.walker@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='irish.lindgren@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.china.walsh@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gregory.gislason@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dr.tashia.hammes@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='msgr.keven.crooks@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2141][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='msgr.ivey.orn@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='quintin.hayes@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ms.waldo.zulauf@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carmine.kuhn@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kaleigh.frami@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jessie.gerhold@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jarrett.cremin.phd@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.sergio.monahan@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='royce.cassin@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='raleigh.effertz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='francesca.effertz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='vesta.hyatt@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rev.isaiah.cormier@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='oswaldo.pollich@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fr.fausto.king@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='treena.fritsch@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2142][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='raisa.morissette@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='hank.bradtke@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='the.hon.micheal.walsh@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='alishia.maggio.ret@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='twanda.macejkovic.ii@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='huey.howe@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='pilar.turner.md@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='pres.altha.mills@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dorthey.yundt.dc@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='briana.kautzer.v@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2143][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='johanne.hettinger.md@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:27:2180][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.177+0900', '2022-08-01T01:16:27.177+0900', 'elliott.keebler@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2184][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.193+0900', '2022-08-01T01:16:27.193+0900', 'dr.kirstin.conroy@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2185][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.194+0900', '2022-08-01T01:16:27.194+0900', 'therese.hyatt@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2186][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.195+0900', '2022-08-01T01:16:27.195+0900', 'myrtle.aufderhar@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2187][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.196+0900', '2022-08-01T01:16:27.196+0900', 'burl.franecki@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2188][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.197+0900', '2022-08-01T01:16:27.197+0900', 'pres.julianna.mayert@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2189][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.198+0900', '2022-08-01T01:16:27.198+0900', 'luciano.flatley@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2190][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.199+0900', '2022-08-01T01:16:27.199+0900', 'davis.rutherford@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2190][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.200+0900', '2022-08-01T01:16:27.200+0900', 'nicholle.mcglynn@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2191][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.200+0900', '2022-08-01T01:16:27.200+0900', 'lane.legros@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2192][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.201+0900', '2022-08-01T01:16:27.201+0900', 'andre.white@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2193][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.202+0900', '2022-08-01T01:16:27.202+0900', 'ma.lemke@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2193][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.203+0900', '2022-08-01T01:16:27.203+0900', 'amb.brad.schuster@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2194][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.203+0900', '2022-08-01T01:16:27.203+0900', 'fr.henriette.haley@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2195][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.204+0900', '2022-08-01T01:16:27.204+0900', 'delora.hagenes.vm@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2196][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.205+0900', '2022-08-01T01:16:27.205+0900', 'randa.harber@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2196][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.206+0900', '2022-08-01T01:16:27.206+0900', 'hector.armstrong@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2197][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.207+0900', '2022-08-01T01:16:27.207+0900', 'virgil.lind@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2198][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.207+0900', '2022-08-01T01:16:27.207+0900', 'isidro.langworth@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2199][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.208+0900', '2022-08-01T01:16:27.208+0900', 'fletcher.ledner@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2199][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.209+0900', '2022-08-01T01:16:27.209+0900', 'alfred.simonis@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2200][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.209+0900', '2022-08-01T01:16:27.209+0900', 'boris.hartmann@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2201][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.210+0900', '2022-08-01T01:16:27.210+0900', 'taina.wilkinson@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2201][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.211+0900', '2022-08-01T01:16:27.211+0900', 'elton.hyatt@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2202][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.212+0900', '2022-08-01T01:16:27.212+0900', 'yon.auer@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2203][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.212+0900', '2022-08-01T01:16:27.212+0900', 'porsha.moen.dc@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2203][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.213+0900', '2022-08-01T01:16:27.213+0900', 'rosemary.corkery@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2204][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.214+0900', '2022-08-01T01:16:27.214+0900', 'shayne.kuhic.lld@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2205][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.214+0900', '2022-08-01T01:16:27.214+0900', 'jimmy.armstrong@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2205][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.215+0900', '2022-08-01T01:16:27.215+0900', 'mr.bo.schinner@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2206][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.216+0900', '2022-08-01T01:16:27.216+0900', 'loren.effertz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2207][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.216+0900', '2022-08-01T01:16:27.216+0900', 'chris.jerde@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2207][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.217+0900', '2022-08-01T01:16:27.217+0900', 'eileen.dooley.jd@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2208][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.217+0900', '2022-08-01T01:16:27.217+0900', 'malik.douglas@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2209][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.218+0900', '2022-08-01T01:16:27.218+0900', 'lanny.huel@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2209][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.219+0900', '2022-08-01T01:16:27.219+0900', 'lino.kertzmann@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2210][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.219+0900', '2022-08-01T01:16:27.219+0900', 'angla.maggio@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2211][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.220+0900', '2022-08-01T01:16:27.220+0900', 'rene.mcglynn@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2211][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.221+0900', '2022-08-01T01:16:27.221+0900', 'wilber.anderson@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2212][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.221+0900', '2022-08-01T01:16:27.221+0900', 'kacie.durgan@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2212][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.222+0900', '2022-08-01T01:16:27.222+0900', 'clark.heidenreich@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2213][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.223+0900', '2022-08-01T01:16:27.223+0900', 'refugia.franecki@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2214][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.223+0900', '2022-08-01T01:16:27.223+0900', 'angeline.emard@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2215][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.224+0900', '2022-08-01T01:16:27.224+0900', 'tanja.wunsch@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2215][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.225+0900', '2022-08-01T01:16:27.225+0900', 'adeline.hegmann@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2216][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.225+0900', '2022-08-01T01:16:27.225+0900', 'yu.rutherford@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2216][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.226+0900', '2022-08-01T01:16:27.226+0900', 'elida.reichel@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2217][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.227+0900', '2022-08-01T01:16:27.227+0900', 'dustin.marquardt@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2218][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.227+0900', '2022-08-01T01:16:27.227+0900', 'devon.buckridge@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2218][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.228+0900', '2022-08-01T01:16:27.228+0900', 'rep.dorthey.reichel@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2219][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.228+0900', '2022-08-01T01:16:27.228+0900', 'soraya.willms.jd@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2220][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.229+0900', '2022-08-01T01:16:27.229+0900', 'zackary.kiehn@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2220][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.230+0900', '2022-08-01T01:16:27.230+0900', 'elisha.vandervort@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2221][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.230+0900', '2022-08-01T01:16:27.230+0900', 'ernest.botsford@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2221][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.231+0900', '2022-08-01T01:16:27.231+0900', 'lanny.rosenbaum@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2222][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.232+0900', '2022-08-01T01:16:27.232+0900', 'prof.angelo.botsford@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2223][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.232+0900', '2022-08-01T01:16:27.232+0900', 'cristi.dicki@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2223][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.233+0900', '2022-08-01T01:16:27.233+0900', 'coleen.lubowitz@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2224][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.233+0900', '2022-08-01T01:16:27.233+0900', 'lezlie.ullrich@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2224][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.234+0900', '2022-08-01T01:16:27.234+0900', 'deanna.kuhlman@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2225][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.235+0900', '2022-08-01T01:16:27.235+0900', 'corina.orn@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2226][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.235+0900', '2022-08-01T01:16:27.235+0900', 'patrina.ruecker@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2226][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.236+0900', '2022-08-01T01:16:27.236+0900', 'tyson.altenwerth.phd@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2227][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.236+0900', '2022-08-01T01:16:27.236+0900', 'bernardo.wolf@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2228][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.237+0900', '2022-08-01T01:16:27.237+0900', 'bebe.johnson.md@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2228][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.238+0900', '2022-08-01T01:16:27.238+0900', 'marg.kihn.ii@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2229][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.239+0900', '2022-08-01T01:16:27.239+0900', 'loyd.bogisich@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2230][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.239+0900', '2022-08-01T01:16:27.239+0900', 'teena.walker@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2230][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.240+0900', '2022-08-01T01:16:27.240+0900', 'irish.lindgren@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2231][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.240+0900', '2022-08-01T01:16:27.240+0900', 'amb.china.walsh@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2231][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.241+0900', '2022-08-01T01:16:27.241+0900', 'gregory.gislason@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2232][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.241+0900', '2022-08-01T01:16:27.241+0900', 'dr.tashia.hammes@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2232][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.242+0900', '2022-08-01T01:16:27.242+0900', 'msgr.keven.crooks@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2233][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.243+0900', '2022-08-01T01:16:27.243+0900', 'msgr.ivey.orn@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2234][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.243+0900', '2022-08-01T01:16:27.243+0900', 'quintin.hayes@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2234][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.244+0900', '2022-08-01T01:16:27.244+0900', 'ms.waldo.zulauf@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2235][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.244+0900', '2022-08-01T01:16:27.244+0900', 'carmine.kuhn@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2235][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.245+0900', '2022-08-01T01:16:27.245+0900', 'kaleigh.frami@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2236][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.246+0900', '2022-08-01T01:16:27.246+0900', 'jessie.gerhold@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2237][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.246+0900', '2022-08-01T01:16:27.246+0900', 'jarrett.cremin.phd@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2237][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.247+0900', '2022-08-01T01:16:27.247+0900', 'amb.sergio.monahan@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2238][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.247+0900', '2022-08-01T01:16:27.247+0900', 'royce.cassin@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2238][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.248+0900', '2022-08-01T01:16:27.248+0900', 'raleigh.effertz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2239][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.249+0900', '2022-08-01T01:16:27.249+0900', 'francesca.effertz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2240][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.249+0900', '2022-08-01T01:16:27.249+0900', 'vesta.hyatt@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2240][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.250+0900', '2022-08-01T01:16:27.250+0900', 'rev.isaiah.cormier@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2241][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.250+0900', '2022-08-01T01:16:27.250+0900', 'oswaldo.pollich@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2241][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.251+0900', '2022-08-01T01:16:27.251+0900', 'fr.fausto.king@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2242][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.251+0900', '2022-08-01T01:16:27.251+0900', 'treena.fritsch@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2242][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.252+0900', '2022-08-01T01:16:27.252+0900', 'raisa.morissette@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2243][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.253+0900', '2022-08-01T01:16:27.253+0900', 'hank.bradtke@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2243][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.253+0900', '2022-08-01T01:16:27.253+0900', 'the.hon.micheal.walsh@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2244][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.254+0900', '2022-08-01T01:16:27.254+0900', 'alishia.maggio.ret@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2245][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.254+0900', '2022-08-01T01:16:27.254+0900', 'twanda.macejkovic.ii@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2245][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.255+0900', '2022-08-01T01:16:27.255+0900', 'huey.howe@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2246][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.255+0900', '2022-08-01T01:16:27.255+0900', 'pilar.turner.md@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2246][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.256+0900', '2022-08-01T01:16:27.256+0900', 'pres.altha.mills@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2247][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.256+0900', '2022-08-01T01:16:27.256+0900', 'dorthey.yundt.dc@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2247][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.257+0900', '2022-08-01T01:16:27.257+0900', 'briana.kautzer.v@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:27:2248][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:27.258+0900', '2022-08-01T01:16:27.258+0900', 'johanne.hettinger.md@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=15, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=94, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=26, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=20, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=24, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=43, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=94, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=3, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2251][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=80, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=18, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=22, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=4, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=46, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=9, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=49, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=55, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=20, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=92, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=68, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=53, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=11, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=37, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=79, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=58, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=37, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=75, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2252][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=20, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=37, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=93, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=51, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=15, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=4, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=98, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=82, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=48, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=27, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=5, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=47, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=50, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=83, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=9, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=10, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=48, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=15, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2253][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=85, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=50, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=69, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=57, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=55, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=69, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=58, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=4, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=64, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=55, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=68, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=50, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=33, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=90, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=65, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=53, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=83, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=28, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2254][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=59, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=86, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=54, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=65, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=88, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=96, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=84, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=35, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=80, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2255][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=27, email='', password='', role=USER)) 
[2022-08-01 01:16:27:2261][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.270+0900', '2022-08-01T01:16:27.270+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 100, 'Rocinante') 
[2022-08-01 01:16:27:2262][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.271+0900', '2022-08-01T01:16:27.271+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 15, 'Kittur Chennamma') 
[2022-08-01 01:16:27:2263][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.272+0900', '2022-08-01T01:16:27.272+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 94, 'Corvette') 
[2022-08-01 01:16:27:2263][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.273+0900', '2022-08-01T01:16:27.273+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 23, 'Anubis') 
[2022-08-01 01:16:27:2264][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.273+0900', '2022-08-01T01:16:27.273+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 26, 'Aristophanes') 
[2022-08-01 01:16:27:2265][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.274+0900', '2022-08-01T01:16:27.274+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 20, 'S.A. Corey') 
[2022-08-01 01:16:27:2265][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.275+0900', '2022-08-01T01:16:27.275+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 24, 'Canterbury') 
[2022-08-01 01:16:27:2266][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.275+0900', '2022-08-01T01:16:27.275+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 62, 'Razorback') 
[2022-08-01 01:16:27:2266][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.276+0900', '2022-08-01T01:16:27.276+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 43, 'Tanaka') 
[2022-08-01 01:16:27:2267][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.276+0900', '2022-08-01T01:16:27.276+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 30, 'Lucien') 
[2022-08-01 01:16:27:2268][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.277+0900', '2022-08-01T01:16:27.277+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 36, 'Razorback') 
[2022-08-01 01:16:27:2268][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.278+0900', '2022-08-01T01:16:27.278+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 94, 'Corvette') 
[2022-08-01 01:16:27:2269][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.278+0900', '2022-08-01T01:16:27.278+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 3, 'Lucien') 
[2022-08-01 01:16:27:2269][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.279+0900', '2022-08-01T01:16:27.279+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 80, 'Hammurabi') 
[2022-08-01 01:16:27:2270][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.280+0900', '2022-08-01T01:16:27.280+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 18, 'S.A. Corey') 
[2022-08-01 01:16:27:2271][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.280+0900', '2022-08-01T01:16:27.280+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 22, 'Corvette') 
[2022-08-01 01:16:27:2271][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.281+0900', '2022-08-01T01:16:27.281+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 72, 'Marasmus') 
[2022-08-01 01:16:27:2272][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.281+0900', '2022-08-01T01:16:27.281+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 4, 'Corvette') 
[2022-08-01 01:16:27:2272][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.282+0900', '2022-08-01T01:16:27.282+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 46, 'Kittur Chennamma') 
[2022-08-01 01:16:27:2273][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.282+0900', '2022-08-01T01:16:27.282+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 9, 'Nauvoo') 
[2022-08-01 01:16:27:2273][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.283+0900', '2022-08-01T01:16:27.283+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 49, 'Corvette') 
[2022-08-01 01:16:27:2274][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.283+0900', '2022-08-01T01:16:27.283+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 55, 'Lightbreaker') 
[2022-08-01 01:16:27:2274][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.284+0900', '2022-08-01T01:16:27.284+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 20, 'S.A. Corey') 
[2022-08-01 01:16:27:2275][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.285+0900', '2022-08-01T01:16:27.285+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 92, 'Tanaka') 
[2022-08-01 01:16:27:2276][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.285+0900', '2022-08-01T01:16:27.285+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 68, 'Lightbreaker') 
[2022-08-01 01:16:27:2276][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.286+0900', '2022-08-01T01:16:27.286+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 6, 'Donnager') 
[2022-08-01 01:16:27:2277][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.286+0900', '2022-08-01T01:16:27.286+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 53, 'Nauvoo') 
[2022-08-01 01:16:27:2278][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.287+0900', '2022-08-01T01:16:27.287+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 11, 'Nephthys') 
[2022-08-01 01:16:27:2278][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.288+0900', '2022-08-01T01:16:27.288+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 37, 'S.A. Corey') 
[2022-08-01 01:16:27:2279][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.288+0900', '2022-08-01T01:16:27.288+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 79, 'Schiaparelli') 
[2022-08-01 01:16:27:2279][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.289+0900', '2022-08-01T01:16:27.289+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 58, 'Corvette') 
[2022-08-01 01:16:27:2280][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.289+0900', '2022-08-01T01:16:27.289+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 37, 'Marasmus') 
[2022-08-01 01:16:27:2280][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.290+0900', '2022-08-01T01:16:27.290+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 75, 'Lightbreaker') 
[2022-08-01 01:16:27:2281][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.291+0900', '2022-08-01T01:16:27.291+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 20, 'Schiaparelli') 
[2022-08-01 01:16:27:2282][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.291+0900', '2022-08-01T01:16:27.291+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 37, 'Hammurabi') 
[2022-08-01 01:16:27:2282][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.292+0900', '2022-08-01T01:16:27.292+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 93, 'Aristophanes') 
[2022-08-01 01:16:27:2283][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.292+0900', '2022-08-01T01:16:27.292+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 81, 'Razorback') 
[2022-08-01 01:16:27:2283][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.293+0900', '2022-08-01T01:16:27.293+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 81, 'Tanaka') 
[2022-08-01 01:16:27:2284][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.293+0900', '2022-08-01T01:16:27.293+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 51, 'Donnager') 
[2022-08-01 01:16:27:2284][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.294+0900', '2022-08-01T01:16:27.294+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 15, 'Lucien') 
[2022-08-01 01:16:27:2285][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.294+0900', '2022-08-01T01:16:27.294+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 4, 'Koto') 
[2022-08-01 01:16:27:2286][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.295+0900', '2022-08-01T01:16:27.295+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 13, 'Schiaparelli') 
[2022-08-01 01:16:27:2286][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.296+0900', '2022-08-01T01:16:27.296+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 98, 'Kittur Chennamma') 
[2022-08-01 01:16:27:2287][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.297+0900', '2022-08-01T01:16:27.297+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 82, 'Hammurabi') 
[2022-08-01 01:16:27:2287][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.297+0900', '2022-08-01T01:16:27.297+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 25, 'Canterbury') 
[2022-08-01 01:16:27:2288][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.298+0900', '2022-08-01T01:16:27.298+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 48, 'Lucien') 
[2022-08-01 01:16:27:2288][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.298+0900', '2022-08-01T01:16:27.298+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 27, 'Donnager') 
[2022-08-01 01:16:27:2289][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.299+0900', '2022-08-01T01:16:27.299+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 41, 'Kittur Chennamma') 
[2022-08-01 01:16:27:2290][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.299+0900', '2022-08-01T01:16:27.299+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 5, 'Hammurabi') 
[2022-08-01 01:16:27:2290][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.300+0900', '2022-08-01T01:16:27.300+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 47, 'Lucien') 
[2022-08-01 01:16:27:2291][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.300+0900', '2022-08-01T01:16:27.300+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 50, 'Hammurabi') 
[2022-08-01 01:16:27:2292][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.302+0900', '2022-08-01T01:16:27.302+0900', 'Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', 83, 'S.A. Corey') 
[2022-08-01 01:16:27:2293][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.302+0900', '2022-08-01T01:16:27.302+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 9, 'Nephthys') 
[2022-08-01 01:16:27:2293][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.303+0900', '2022-08-01T01:16:27.303+0900', 'Smart people underestimate the ordinarity of ordinary people.', 17, 'Hammurabi') 
[2022-08-01 01:16:27:2294][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.303+0900', '2022-08-01T01:16:27.303+0900', 'Smart people underestimate the ordinarity of ordinary people.', 10, 'Tanaka') 
[2022-08-01 01:16:27:2294][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.304+0900', '2022-08-01T01:16:27.304+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 91, 'Kingfisher') 
[2022-08-01 01:16:27:2295][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.304+0900', '2022-08-01T01:16:27.304+0900', 'The orthogonal features, when combined, can explode into complexity.', 30, 'Marasmus') 
[2022-08-01 01:16:27:2295][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.305+0900', '2022-08-01T01:16:27.305+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 48, 'Hammurabi') 
[2022-08-01 01:16:27:2296][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.305+0900', '2022-08-01T01:16:27.305+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 15, 'Marasmus') 
[2022-08-01 01:16:27:2296][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.306+0900', '2022-08-01T01:16:27.306+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 85, 'Nauvoo') 
[2022-08-01 01:16:27:2297][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.306+0900', '2022-08-01T01:16:27.306+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 50, 'S.A. Corey') 
[2022-08-01 01:16:27:2297][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.307+0900', '2022-08-01T01:16:27.307+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 69, 'Kingfisher') 
[2022-08-01 01:16:27:2298][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.307+0900', '2022-08-01T01:16:27.307+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 57, 'Koto') 
[2022-08-01 01:16:27:2298][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.308+0900', '2022-08-01T01:16:27.308+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 55, 'Corvette') 
[2022-08-01 01:16:27:2299][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.309+0900', '2022-08-01T01:16:27.309+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 69, 'Canterbury') 
[2022-08-01 01:16:27:2300][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.309+0900', '2022-08-01T01:16:27.309+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 72, 'S.A. Corey') 
[2022-08-01 01:16:27:2300][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.310+0900', '2022-08-01T01:16:27.310+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 29, 'Kingfisher') 
[2022-08-01 01:16:27:2301][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.310+0900', '2022-08-01T01:16:27.310+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 36, 'Donnager') 
[2022-08-01 01:16:27:2301][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.311+0900', '2022-08-01T01:16:27.311+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 58, 'Lucien') 
[2022-08-01 01:16:27:2302][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.311+0900', '2022-08-01T01:16:27.311+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 4, 'Canterbury') 
[2022-08-01 01:16:27:2302][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.312+0900', '2022-08-01T01:16:27.312+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 100, 'Hammurabi') 
[2022-08-01 01:16:27:2303][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.312+0900', '2022-08-01T01:16:27.312+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 17, 'Nephthys') 
[2022-08-01 01:16:27:2303][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.313+0900', '2022-08-01T01:16:27.313+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 64, 'Koto') 
[2022-08-01 01:16:27:2304][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.313+0900', '2022-08-01T01:16:27.313+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 55, 'Tanaka') 
[2022-08-01 01:16:27:2304][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.314+0900', '2022-08-01T01:16:27.314+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 100, 'Razorback') 
[2022-08-01 01:16:27:2305][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.314+0900', '2022-08-01T01:16:27.314+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 68, 'Donnager') 
[2022-08-01 01:16:27:2305][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.315+0900', '2022-08-01T01:16:27.315+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 50, 'Corvette') 
[2022-08-01 01:16:27:2306][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.315+0900', '2022-08-01T01:16:27.315+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 33, 'Aristophanes') 
[2022-08-01 01:16:27:2307][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.316+0900', '2022-08-01T01:16:27.316+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 90, 'Corvette') 
[2022-08-01 01:16:27:2307][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.317+0900', '2022-08-01T01:16:27.317+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 2, 'Donnager') 
[2022-08-01 01:16:27:2308][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.317+0900', '2022-08-01T01:16:27.317+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 25, 'Corvette') 
[2022-08-01 01:16:27:2308][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.318+0900', '2022-08-01T01:16:27.318+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 65, 'Schiaparelli') 
[2022-08-01 01:16:27:2309][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.318+0900', '2022-08-01T01:16:27.318+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 53, 'Corvette') 
[2022-08-01 01:16:27:2309][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.319+0900', '2022-08-01T01:16:27.319+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 83, 'Aristophanes') 
[2022-08-01 01:16:27:2310][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.319+0900', '2022-08-01T01:16:27.319+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 28, 'Razorback') 
[2022-08-01 01:16:27:2310][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.320+0900', '2022-08-01T01:16:27.320+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 59, 'Marasmus') 
[2022-08-01 01:16:27:2311][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.320+0900', '2022-08-01T01:16:27.320+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 86, 'Schiaparelli') 
[2022-08-01 01:16:27:2311][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.321+0900', '2022-08-01T01:16:27.321+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 54, 'Hammurabi') 
[2022-08-01 01:16:27:2312][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.321+0900', '2022-08-01T01:16:27.321+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 91, 'Callisto''s Dream') 
[2022-08-01 01:16:27:2312][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.322+0900', '2022-08-01T01:16:27.322+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 65, 'Canterbury') 
[2022-08-01 01:16:27:2313][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.322+0900', '2022-08-01T01:16:27.322+0900', 'The orthogonal features, when combined, can explode into complexity.', 25, 'Aristophanes') 
[2022-08-01 01:16:27:2313][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.323+0900', '2022-08-01T01:16:27.323+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 88, 'Kingfisher') 
[2022-08-01 01:16:27:2314][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.323+0900', '2022-08-01T01:16:27.323+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 96, 'Razorback') 
[2022-08-01 01:16:27:2314][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.324+0900', '2022-08-01T01:16:27.324+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 84, 'Knight') 
[2022-08-01 01:16:27:2315][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.324+0900', '2022-08-01T01:16:27.324+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 25, 'Koto') 
[2022-08-01 01:16:27:2315][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.325+0900', '2022-08-01T01:16:27.325+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 35, 'S.A. Corey') 
[2022-08-01 01:16:27:2316][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.325+0900', '2022-08-01T01:16:27.325+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 100, 'Razorback') 
[2022-08-01 01:16:27:2316][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.326+0900', '2022-08-01T01:16:27.326+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 80, 'Tanaka') 
[2022-08-01 01:16:27:2317][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.327+0900', '2022-08-01T01:16:27.327+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 44, 'Schiaparelli') 
[2022-08-01 01:16:27:2317][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:27.327+0900', '2022-08-01T01:16:27.327+0900', 'Smart people underestimate the ordinarity of ordinary people.', 27, 'Knight') 
[2022-08-01 01:16:27:2329][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:27 | OperationTime : 5ms 
[2022-08-01 01:16:38:13793][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:16:38:13796][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:16:38:13821][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:16:41:257][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 8738 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:16:41:258][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:16:41:260][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:16:41:590][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:16:41:613][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 20 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:16:41:810][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:16:41:814][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:16:41:814][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:16:41:814][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:16:41:859][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:16:41:859][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 580 ms 
[2022-08-01 01:16:41:929][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:16:41:948][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:16:41:1018][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:16:41:1051][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:16:41:1079][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:16:41:1088][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:16:42:1352][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202134 | took 23ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`; 
[2022-08-01 01:16:42:1359][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202141 | took 7ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`; 
[2022-08-01 01:16:42:1364][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202146 | took 4ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Comment`
drop table if exists `Comment`; 
[2022-08-01 01:16:42:1373][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202155 | took 8ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Member`
drop table if exists `Member`; 
[2022-08-01 01:16:42:1376][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202158 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Post`
drop table if exists `Post`; 
[2022-08-01 01:16:42:1383][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202165 | took 6ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `post_id` bigint, primary key (`id`)) engine=InnoDB
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `post_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:42:1390][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202172 | took 6ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:42:1395][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202177 | took 4ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:16:42:1413][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202195 | took 18ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`)
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`); 
[2022-08-01 01:16:42:1430][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284202212 | took 15ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`)
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`); 
[2022-08-01 01:16:42:1431][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:16:42:1441][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:16:42:2005][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:16:42:2017][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:16:42:2023][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 1.952 seconds (JVM running for 2.229) 
[2022-08-01 01:16:42:2036][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='vanda.nader@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2036][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='claudia.langworth@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2036][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rickey.johnson@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='marco.moore@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tod.macgyver@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gale.hand@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='susann.bailey@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jadwiga.oberbrunner@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='patrice.breitenberg@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rhett.lueilwitz.dvm@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.carissa.streich@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2037][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ronald.runte.esq@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='joshua.monahan@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='brant.barton@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='leigh.jacobson.sr@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='sau.denesik@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='vincenzo.gusikowski@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tory.fay@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.johnie.o'conner@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='miss.clair.feeney@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2038][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='irwin.schaefer.esq@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='nestor.funk@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='alfonso.emmerich@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kari.shanahan.iii@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='marlena.windler.v@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='janina.kub@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tamela.hoppe.jr@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jesse.fisher@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gloria.lakin.phd@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2039][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.lacey.prosacco@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='georgann.schamberger@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='cole.hartmann@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dr.patricia.corkery@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rev.leoma.jaskolski@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ms.ellsworth.nader@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jody.waelchi@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='buford.barrows.dc@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='freddy.williamson@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kasey.stamm@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2040][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jeremy.lesch@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jama.dickinson.v@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jame.okuneva@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.fonda.welch@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='todd.bergstrom@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='hortencia.kirlin@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.leonard.roob@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jerome.graham.i@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='vallie.kunze.dc@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='woodrow.casper.md@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ambrose.heidenreich@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2041][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='louie.macejkovic.sr@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.shelton.turner@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ayanna.conroy@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='raymond.kub.phd@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='clifford.kautzer@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='takako.brakus@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ms.annabelle.lueilwitz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lakia.walker@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='micheal.cummerata.cpa@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='wesley.ziemann@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carmel.labadie@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='russell.anderson@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2042][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='stacy.runolfsson.v@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='weldon.vonrueden@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='aurora.boyer@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='randal.grant@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='etsuko.zulauf@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='glynda.cruickshank@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='bridget.nienow@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2043][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gov.felice.ortiz@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='terrence.ward@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='devorah.osinski@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jarvis.reinger@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kami.anderson@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gracia.zboncak@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='shoshana.witting@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gwen.boyle@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='morgan.braun@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='porter.swift@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='chieko.herman@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='todd.hamill.vm@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2044][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='shea.renner@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='candis.fahey@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kandra.dicki@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lorie.mccullough.cpa@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lola.spinka@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.dave.hirthe@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='blair.ritchie@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.percy.bauch@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dennis.hickle@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mrs.malik.tillman@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ollie.nader@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2045][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='bradly.toy@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='sherita.bins@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fr.clay.rempel@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carmelo.mertz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='msgr.marilyn.jones@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='the.hon.louie.fisher@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='pres.kassie.ondricka@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2046][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ezekiel.bernier@gmail.test', password='1234', role=USER) 
[2022-08-01 01:16:42:2085][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.853+0900', '2022-08-01T01:16:42.853+0900', 'vanda.nader@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2089][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.870+0900', '2022-08-01T01:16:42.870+0900', 'claudia.langworth@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2090][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.871+0900', '2022-08-01T01:16:42.871+0900', 'rickey.johnson@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2091][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.872+0900', '2022-08-01T01:16:42.872+0900', 'marco.moore@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2092][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.873+0900', '2022-08-01T01:16:42.873+0900', 'tod.macgyver@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2093][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.874+0900', '2022-08-01T01:16:42.874+0900', 'gale.hand@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2093][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.875+0900', '2022-08-01T01:16:42.875+0900', 'susann.bailey@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2094][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.876+0900', '2022-08-01T01:16:42.876+0900', 'jadwiga.oberbrunner@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2095][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.876+0900', '2022-08-01T01:16:42.876+0900', 'patrice.breitenberg@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2096][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.877+0900', '2022-08-01T01:16:42.877+0900', 'rhett.lueilwitz.dvm@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2096][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.878+0900', '2022-08-01T01:16:42.878+0900', 'mr.carissa.streich@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2097][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.879+0900', '2022-08-01T01:16:42.879+0900', 'ronald.runte.esq@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2098][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.879+0900', '2022-08-01T01:16:42.879+0900', 'joshua.monahan@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2098][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.880+0900', '2022-08-01T01:16:42.880+0900', 'brant.barton@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2099][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.881+0900', '2022-08-01T01:16:42.881+0900', 'leigh.jacobson.sr@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2100][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.881+0900', '2022-08-01T01:16:42.881+0900', 'sau.denesik@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2101][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.882+0900', '2022-08-01T01:16:42.882+0900', 'vincenzo.gusikowski@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2101][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.883+0900', '2022-08-01T01:16:42.883+0900', 'tory.fay@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2102][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.883+0900', '2022-08-01T01:16:42.883+0900', 'mr.johnie.o''conner@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2103][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.884+0900', '2022-08-01T01:16:42.884+0900', 'miss.clair.feeney@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2103][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.885+0900', '2022-08-01T01:16:42.885+0900', 'irwin.schaefer.esq@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2104][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.886+0900', '2022-08-01T01:16:42.886+0900', 'nestor.funk@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2105][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.886+0900', '2022-08-01T01:16:42.886+0900', 'alfonso.emmerich@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2105][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.887+0900', '2022-08-01T01:16:42.887+0900', 'kari.shanahan.iii@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2106][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.888+0900', '2022-08-01T01:16:42.888+0900', 'marlena.windler.v@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2107][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.888+0900', '2022-08-01T01:16:42.888+0900', 'janina.kub@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2108][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.889+0900', '2022-08-01T01:16:42.889+0900', 'tamela.hoppe.jr@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2108][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.890+0900', '2022-08-01T01:16:42.890+0900', 'jesse.fisher@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2109][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.890+0900', '2022-08-01T01:16:42.890+0900', 'gloria.lakin.phd@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2109][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.891+0900', '2022-08-01T01:16:42.891+0900', 'prof.lacey.prosacco@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2110][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.892+0900', '2022-08-01T01:16:42.892+0900', 'georgann.schamberger@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2111][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.892+0900', '2022-08-01T01:16:42.892+0900', 'cole.hartmann@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2111][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.893+0900', '2022-08-01T01:16:42.893+0900', 'dr.patricia.corkery@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2112][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.894+0900', '2022-08-01T01:16:42.894+0900', 'rev.leoma.jaskolski@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2113][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.894+0900', '2022-08-01T01:16:42.894+0900', 'ms.ellsworth.nader@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2113][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.895+0900', '2022-08-01T01:16:42.895+0900', 'jody.waelchi@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2114][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.896+0900', '2022-08-01T01:16:42.896+0900', 'buford.barrows.dc@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2115][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.896+0900', '2022-08-01T01:16:42.896+0900', 'freddy.williamson@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2115][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.897+0900', '2022-08-01T01:16:42.897+0900', 'kasey.stamm@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2116][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.897+0900', '2022-08-01T01:16:42.897+0900', 'jeremy.lesch@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2116][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.898+0900', '2022-08-01T01:16:42.898+0900', 'jama.dickinson.v@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2117][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.899+0900', '2022-08-01T01:16:42.899+0900', 'jame.okuneva@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2118][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.899+0900', '2022-08-01T01:16:42.899+0900', 'mr.fonda.welch@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2118][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.900+0900', '2022-08-01T01:16:42.900+0900', 'todd.bergstrom@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2119][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.901+0900', '2022-08-01T01:16:42.901+0900', 'hortencia.kirlin@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2120][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.901+0900', '2022-08-01T01:16:42.901+0900', 'mr.leonard.roob@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2120][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.902+0900', '2022-08-01T01:16:42.902+0900', 'jerome.graham.i@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2121][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.903+0900', '2022-08-01T01:16:42.903+0900', 'vallie.kunze.dc@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2122][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.903+0900', '2022-08-01T01:16:42.903+0900', 'woodrow.casper.md@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2122][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.904+0900', '2022-08-01T01:16:42.904+0900', 'ambrose.heidenreich@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2123][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.904+0900', '2022-08-01T01:16:42.904+0900', 'louie.macejkovic.sr@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2124][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.905+0900', '2022-08-01T01:16:42.905+0900', 'amb.shelton.turner@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2124][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.906+0900', '2022-08-01T01:16:42.906+0900', 'ayanna.conroy@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2125][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.906+0900', '2022-08-01T01:16:42.906+0900', 'raymond.kub.phd@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2125][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.907+0900', '2022-08-01T01:16:42.907+0900', 'clifford.kautzer@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2126][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.908+0900', '2022-08-01T01:16:42.908+0900', 'takako.brakus@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2127][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.908+0900', '2022-08-01T01:16:42.908+0900', 'ms.annabelle.lueilwitz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2127][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.909+0900', '2022-08-01T01:16:42.909+0900', 'lakia.walker@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2128][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.909+0900', '2022-08-01T01:16:42.909+0900', 'micheal.cummerata.cpa@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2128][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.910+0900', '2022-08-01T01:16:42.910+0900', 'wesley.ziemann@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2129][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.911+0900', '2022-08-01T01:16:42.911+0900', 'carmel.labadie@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2130][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.911+0900', '2022-08-01T01:16:42.911+0900', 'russell.anderson@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2130][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.912+0900', '2022-08-01T01:16:42.912+0900', 'stacy.runolfsson.v@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2131][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.913+0900', '2022-08-01T01:16:42.913+0900', 'weldon.vonrueden@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2132][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.913+0900', '2022-08-01T01:16:42.913+0900', 'aurora.boyer@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2132][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.914+0900', '2022-08-01T01:16:42.914+0900', 'randal.grant@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2133][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.915+0900', '2022-08-01T01:16:42.915+0900', 'etsuko.zulauf@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2134][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.915+0900', '2022-08-01T01:16:42.915+0900', 'glynda.cruickshank@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2134][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.916+0900', '2022-08-01T01:16:42.916+0900', 'bridget.nienow@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2135][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.916+0900', '2022-08-01T01:16:42.916+0900', 'gov.felice.ortiz@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2136][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.917+0900', '2022-08-01T01:16:42.917+0900', 'terrence.ward@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2136][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.918+0900', '2022-08-01T01:16:42.918+0900', 'devorah.osinski@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2137][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.918+0900', '2022-08-01T01:16:42.918+0900', 'jarvis.reinger@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2137][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.919+0900', '2022-08-01T01:16:42.919+0900', 'kami.anderson@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2138][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.920+0900', '2022-08-01T01:16:42.920+0900', 'gracia.zboncak@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2139][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.920+0900', '2022-08-01T01:16:42.920+0900', 'shoshana.witting@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2139][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.921+0900', '2022-08-01T01:16:42.921+0900', 'gwen.boyle@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2140][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.921+0900', '2022-08-01T01:16:42.921+0900', 'morgan.braun@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2140][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.922+0900', '2022-08-01T01:16:42.922+0900', 'porter.swift@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2141][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.922+0900', '2022-08-01T01:16:42.922+0900', 'chieko.herman@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2141][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.923+0900', '2022-08-01T01:16:42.923+0900', 'todd.hamill.vm@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2142][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.924+0900', '2022-08-01T01:16:42.924+0900', 'shea.renner@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2142][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.924+0900', '2022-08-01T01:16:42.924+0900', 'candis.fahey@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2143][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.925+0900', '2022-08-01T01:16:42.925+0900', 'kandra.dicki@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2144][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.925+0900', '2022-08-01T01:16:42.925+0900', 'lorie.mccullough.cpa@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2144][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.926+0900', '2022-08-01T01:16:42.926+0900', 'lola.spinka@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2145][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.926+0900', '2022-08-01T01:16:42.926+0900', 'prof.dave.hirthe@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2145][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.927+0900', '2022-08-01T01:16:42.927+0900', 'blair.ritchie@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2146][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.927+0900', '2022-08-01T01:16:42.927+0900', 'prof.percy.bauch@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2146][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.928+0900', '2022-08-01T01:16:42.928+0900', 'dennis.hickle@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2147][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.929+0900', '2022-08-01T01:16:42.929+0900', 'mrs.malik.tillman@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2147][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.929+0900', '2022-08-01T01:16:42.929+0900', 'ollie.nader@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2148][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.930+0900', '2022-08-01T01:16:42.930+0900', 'bradly.toy@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2149][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.930+0900', '2022-08-01T01:16:42.930+0900', 'sherita.bins@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2149][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.931+0900', '2022-08-01T01:16:42.931+0900', 'fr.clay.rempel@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2150][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.931+0900', '2022-08-01T01:16:42.931+0900', 'carmelo.mertz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2150][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.932+0900', '2022-08-01T01:16:42.932+0900', 'msgr.marilyn.jones@yahoo.test', '1234', 'USER') 
[2022-08-01 01:16:42:2151][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.932+0900', '2022-08-01T01:16:42.932+0900', 'the.hon.louie.fisher@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2151][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.933+0900', '2022-08-01T01:16:42.933+0900', 'pres.kassie.ondricka@hotmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2152][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:16:42.934+0900', '2022-08-01T01:16:42.934+0900', 'ezekiel.bernier@gmail.test', '1234', 'USER') 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=48, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=65, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=99, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=93, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=38, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=93, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=9, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=92, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=88, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2155][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=94, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=76, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=32, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=18, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=90, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=76, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=47, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=68, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=68, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=1, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2156][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=0, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=9, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=84, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=87, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=18, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=39, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=40, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=94, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=96, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=76, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=84, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=53, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=4, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=70, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=56, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2157][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=40, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=31, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=9, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=90, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=96, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=40, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=70, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=47, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=18, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=8, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=86, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=1, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=67, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=21, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=92, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=35, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=74, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=73, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=32, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=38, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2158][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=48, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=35, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=58, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=95, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=90, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=88, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=35, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=74, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=50, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=57, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=79, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=78, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=15, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=67, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=8, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2159][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=92, email='', password='', role=USER)) 
[2022-08-01 01:16:42:2165][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.946+0900', '2022-08-01T01:16:42.946+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 48, 'Kittur Chennamma') 
[2022-08-01 01:16:42:2166][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.947+0900', '2022-08-01T01:16:42.947+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 65, 'Hammurabi') 
[2022-08-01 01:16:42:2166][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.948+0900', '2022-08-01T01:16:42.948+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 99, 'Razorback') 
[2022-08-01 01:16:42:2167][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.948+0900', '2022-08-01T01:16:42.948+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 41, 'Razorback') 
[2022-08-01 01:16:42:2168][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.949+0900', '2022-08-01T01:16:42.949+0900', 'The orthogonal features, when combined, can explode into complexity.', 93, 'Lucien') 
[2022-08-01 01:16:42:2169][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.950+0900', '2022-08-01T01:16:42.950+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 62, 'Tanaka') 
[2022-08-01 01:16:42:2170][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.951+0900', '2022-08-01T01:16:42.951+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 38, 'S.A. Corey') 
[2022-08-01 01:16:42:2170][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.952+0900', '2022-08-01T01:16:42.952+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 93, 'Anubis') 
[2022-08-01 01:16:42:2171][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.953+0900', '2022-08-01T01:16:42.953+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 9, 'Hammurabi') 
[2022-08-01 01:16:42:2171][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.953+0900', '2022-08-01T01:16:42.953+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 92, 'Nauvoo') 
[2022-08-01 01:16:42:2172][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.954+0900', '2022-08-01T01:16:42.954+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 88, 'Kingfisher') 
[2022-08-01 01:16:42:2172][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.954+0900', '2022-08-01T01:16:42.954+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 94, 'Hammurabi') 
[2022-08-01 01:16:42:2173][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.955+0900', '2022-08-01T01:16:42.955+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 72, 'Lucien') 
[2022-08-01 01:16:42:2174][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.955+0900', '2022-08-01T01:16:42.955+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 41, 'Lucien') 
[2022-08-01 01:16:42:2174][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.956+0900', '2022-08-01T01:16:42.956+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 76, 'Kittur Chennamma') 
[2022-08-01 01:16:42:2175][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.956+0900', '2022-08-01T01:16:42.956+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 32, 'S.A. Corey') 
[2022-08-01 01:16:42:2175][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.957+0900', '2022-08-01T01:16:42.957+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 72, 'Anubis') 
[2022-08-01 01:16:42:2175][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.957+0900', '2022-08-01T01:16:42.957+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 100, 'Kingfisher') 
[2022-08-01 01:16:42:2176][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.958+0900', '2022-08-01T01:16:42.958+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 30, 'Knight') 
[2022-08-01 01:16:42:2176][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.958+0900', '2022-08-01T01:16:42.958+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 18, 'Aristophanes') 
[2022-08-01 01:16:42:2177][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.958+0900', '2022-08-01T01:16:42.958+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 90, 'Corvette') 
[2022-08-01 01:16:42:2177][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.959+0900', '2022-08-01T01:16:42.959+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 76, 'Knight') 
[2022-08-01 01:16:42:2178][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.959+0900', '2022-08-01T01:16:42.959+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 47, 'Donnager') 
[2022-08-01 01:16:42:2178][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.960+0900', '2022-08-01T01:16:42.960+0900', 'The orthogonal features, when combined, can explode into complexity.', 63, 'Rocinante') 
[2022-08-01 01:16:42:2179][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.960+0900', '2022-08-01T01:16:42.960+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 30, 'Callisto''s Dream') 
[2022-08-01 01:16:42:2179][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.961+0900', '2022-08-01T01:16:42.961+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 81, 'Nauvoo') 
[2022-08-01 01:16:42:2180][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.962+0900', '2022-08-01T01:16:42.962+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 68, 'Callisto''s Dream') 
[2022-08-01 01:16:42:2181][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.962+0900', '2022-08-01T01:16:42.962+0900', 'The orthogonal features, when combined, can explode into complexity.', 68, 'S.A. Corey') 
[2022-08-01 01:16:42:2182][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.963+0900', '2022-08-01T01:16:42.963+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 13, 'Schiaparelli') 
[2022-08-01 01:16:42:2182][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.964+0900', '2022-08-01T01:16:42.964+0900', 'Smart people underestimate the ordinarity of ordinary people.', 60, 'Nauvoo') 
[2022-08-01 01:16:42:2183][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.964+0900', '2022-08-01T01:16:42.964+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 1, 'Rocinante') 
[2022-08-01 01:16:42:2183][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.965+0900', '2022-08-01T01:16:42.965+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 2, 'Marasmus') 
[2022-08-01 01:16:42:2184][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.965+0900', '2022-08-01T01:16:42.965+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 60, 'Lightbreaker') 
[2022-08-01 01:16:42:2186][main] [33m WARN[0;39m o.m.jdbc.message.server.ErrorPacket [36mo.m.j.m.s.ErrorPacket[0;39m [32mwarn[0;39m 
 Error: 1452-23000: Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:16:42:2187][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 2ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:16:42.966+0900', '2022-08-01T01:16:42.966+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 0, 'Schiaparelli') 
[2022-08-01 01:16:42:2187][main] [33m WARN[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 SQL Error: 1452, SQLState: 23000 
[2022-08-01 01:16:42:2187][main] [31mERROR[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 (conn=363) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:16:42:2192][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:16:42 | OperationTime : 1ms 
[2022-08-01 01:16:42:2203][main] [31mERROR[0;39m o.s.boot.SpringApplication [36mo.s.b.SpringApplication[0;39m [32mreportFailure[0;39m 
 Application run failed 
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.MethodInvocationValidator.invoke(MethodInvocationValidator.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy128.saveAll(Unknown Source)
	at com.example.simpleblog.config.InitData.init(InitData.kt:37)
	at com.example.simpleblog.config.InitData$$FastClassBySpringCGLIB$$45b2271d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.simpleblog.config.InitData$$EnhancerBySpringCGLIB$$24300cc3.init(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:82)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:82)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.simpleblog.SimpleBlogApplicationKt.main(SimpleBlogApplication.kt:28)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy120.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:700)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 44 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=363) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:288)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:368)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:137)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:819)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:758)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:677)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:620)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:322)
	at org.mariadb.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:299)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.executeUpdate(PreparedStatementWrapper.java:94)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 91 common frames omitted
[2022-08-01 01:16:42:2211][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:16:42:2212][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:16:43:2218][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:19:12:267][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 8827 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:19:12:268][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:19:12:270][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:19:12:605][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:19:12:637][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 28 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:19:12:850][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:19:12:854][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:19:12:854][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:19:12:854][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:19:12:898][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:19:12:898][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 606 ms 
[2022-08-01 01:19:12:974][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:19:12:996][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:19:12:1067][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:19:13:1110][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:19:13:1149][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:19:13:1159][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:19:13:1418][main] [33m WARN[0;39m o.m.jdbc.message.server.ErrorPacket [36mo.m.j.m.s.ErrorPacket[0;39m [32mwarn[0;39m 
 Error: 1091-42000: Can't DROP 'FKabtb4m4ck0139ovka21brw3au'; check that column/key exists 
[2022-08-01 01:19:13:1419][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353317 | took 9ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` drop foreign key `FKabtb4m4ck0139ovka21brw3au`
alter table `Comment` drop foreign key `FKabtb4m4ck0139ovka21brw3au`; 
[2022-08-01 01:19:13:1420][main] [33m WARN[0;39m o.h.t.s.i.ExceptionHandlerLoggedImpl [36mo.h.t.s.i.ExceptionHandlerLoggedImpl[0;39m [32mhandleException[0;39m 
 GenerationTarget encountered exception accepting command : Error executing DDL "alter table `Comment` drop foreign key `FKabtb4m4ck0139ovka21brw3au`" via JDBC Statement 
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table `Comment` drop foreign key `FKabtb4m4ck0139ovka21brw3au`" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.simpleblog.SimpleBlogApplicationKt.main(SimpleBlogApplication.kt:28)
Caused by: java.sql.SQLSyntaxErrorException: (conn=373) Can't DROP 'FKabtb4m4ck0139ovka21brw3au'; check that column/key exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:280)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:368)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:137)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:819)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:758)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:677)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:620)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:906)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1031)
	at org.mariadb.jdbc.Statement.execute(Statement.java:441)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 35 common frames omitted
[2022-08-01 01:19:13:1428][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353326 | took 8ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`
alter table `Comment` drop foreign key `FKk8lsulc0to0gje7apnpwobb1v`; 
[2022-08-01 01:19:13:1439][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353337 | took 9ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`
alter table `Post` drop foreign key `FKa9v8iie588k1ltvt2nsepu9gi`; 
[2022-08-01 01:19:13:1444][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353342 | took 5ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Comment`
drop table if exists `Comment`; 
[2022-08-01 01:19:13:1448][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353346 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Member`
drop table if exists `Member`; 
[2022-08-01 01:19:13:1452][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353350 | took 4ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
drop table if exists `Post`
drop table if exists `Post`; 
[2022-08-01 01:19:13:1465][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353363 | took 11ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `member_id` bigint, `post_id` bigint, primary key (`id`)) engine=InnoDB
create table `Comment` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000) not null, `member_id` bigint, `post_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:19:13:1472][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353370 | took 6ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB
create table `Member` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `email` varchar(255) not null, `password` varchar(255), `role` varchar(255), primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:19:13:1477][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353375 | took 5ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB
create table `Post` (`id` bigint not null auto_increment, `create_at` datetime(6) not null, `update_at` datetime(6), `content` varchar(1000), `title` varchar(255) not null, `member_id` bigint, primary key (`id`)) engine=InnoDB; 
[2022-08-01 01:19:13:1491][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353389 | took 13ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` add constraint `FKabtb4m4ck0139ovka21brw3au` foreign key (`member_id`) references `Member` (`id`)
alter table `Comment` add constraint `FKabtb4m4ck0139ovka21brw3au` foreign key (`member_id`) references `Member` (`id`); 
[2022-08-01 01:19:13:1504][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353402 | took 12ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`)
alter table `Comment` add constraint `FKk8lsulc0to0gje7apnpwobb1v` foreign key (`post_id`) references `Post` (`id`); 
[2022-08-01 01:19:13:1520][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659284353418 | took 15ms | statement | connection 2| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`)
alter table `Post` add constraint `FKa9v8iie588k1ltvt2nsepu9gi` foreign key (`member_id`) references `Member` (`id`); 
[2022-08-01 01:19:13:1521][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:19:13:1528][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:19:13:2096][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:19:14:2108][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:19:14:2114][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.041 seconds (JVM running for 2.399) 
[2022-08-01 01:19:14:2125][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='marilynn.rath@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='whitney.larson@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mrs.augustus.halvorson@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='somer.johnston@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.sebastian.bogisich@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='scott.erdman@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='drew.hermiston@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kelly.daugherty.esq@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2126][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dennis.ankunding.vm@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='alfonzo.ratke@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='brandon.boyle@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='denice.kerluke@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='shalon.greenholt.iv@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='effie.stanton.dc@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='grant.mayer@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='augustine.metz@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ping.king@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2127][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='edith.grimes@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mathew.stracke@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tennie.daugherty.i@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dominique.mante@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='otha.strosin@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carola.hodkiewicz.ii@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fr.ahmad.auer@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='merle.hills@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='odelia.jones@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2128][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='stacie.volkman@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tina.hickle@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ivan.osinski@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mrs.humberto.lesch@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='milan.cormier@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='the.hon.cherrie.frami@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jana.fritsch@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='milan.ullrich.i@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='domenic.runolfsson@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rep.pasquale.douglas@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2129][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dominica.frami@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='daria.bergnaum@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='claribel.stokes@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='geoffrey.quitzon@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='wilson.lockman.dvm@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jenine.greenholt@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rep.arthur.champlin@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jackqueline.rolfson@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='bibi.zulauf@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='caleb.gorczany@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='rosette.romaguera@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2130][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='kent.huels@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='sen.adam.stracke@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elyse.douglas.md@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ashanti.d'amore@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jenae.corwin@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='nichole.sanford@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='candyce.witting@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='shaun.o'reilly@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='trenton.schroeder.ii@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tessa.schiller@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carla.reinger.jr@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gerard.weissnat.v@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2131][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='fanny.murazik@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='msgr.terrell.waters@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='prof.daniel.mann@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='viva.torp@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.morgan.nolan@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='carly.gusikowski.vm@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='charlotte.gerhold@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='elvin.schiller@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2132][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='julian.parker@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='murray.steuber@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='ambrose.hirthe@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='tesha.white.vm@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='claudie.cartwright@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.floyd.lehner@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='cedric.sipes@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='jefferey.casper@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='orval.emard@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='louann.stark@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='belva.kemmer.sr@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='zina.hansen.jd@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='stuart.mcclure.dc@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2133][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='claude.huel@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='eleanore.dach@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='matha.kuphal.v@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mr.lucio.gislason@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mirian.greenholt@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='marlin.satterfield@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='venita.ritchie@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='franklyn.wilkinson.i@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='amb.rudolph.grant@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='nicolas.blanda@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='herta.labadie@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='lolita.weimann@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='mrs.cedric.herzog@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='desmond.erdman@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='richie.dibbert.dds@yahoo.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='laure.spinka.dvm@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2134][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='dr.alonso.bartell@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='edwin.paucek@hotmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='gov.britney.prosacco@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2135][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgenerateMembers[0;39m 
 insert Member(id=null, email='suanne.lang@gmail.test', password='1234', role=USER) 
[2022-08-01 01:19:14:2171][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.055+0900', '2022-08-01T01:19:14.055+0900', 'marilynn.rath@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2175][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.072+0900', '2022-08-01T01:19:14.072+0900', 'whitney.larson@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2176][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.073+0900', '2022-08-01T01:19:14.073+0900', 'mrs.augustus.halvorson@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2177][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.074+0900', '2022-08-01T01:19:14.074+0900', 'somer.johnston@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2177][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.075+0900', '2022-08-01T01:19:14.075+0900', 'prof.sebastian.bogisich@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2178][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.075+0900', '2022-08-01T01:19:14.075+0900', 'scott.erdman@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2179][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.076+0900', '2022-08-01T01:19:14.076+0900', 'drew.hermiston@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2180][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.077+0900', '2022-08-01T01:19:14.077+0900', 'kelly.daugherty.esq@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2180][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.078+0900', '2022-08-01T01:19:14.078+0900', 'dennis.ankunding.vm@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2181][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.079+0900', '2022-08-01T01:19:14.079+0900', 'alfonzo.ratke@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2182][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.079+0900', '2022-08-01T01:19:14.079+0900', 'brandon.boyle@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2183][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.080+0900', '2022-08-01T01:19:14.080+0900', 'denice.kerluke@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2183][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.081+0900', '2022-08-01T01:19:14.081+0900', 'shalon.greenholt.iv@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2184][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.081+0900', '2022-08-01T01:19:14.081+0900', 'effie.stanton.dc@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2184][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.082+0900', '2022-08-01T01:19:14.082+0900', 'grant.mayer@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2185][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.083+0900', '2022-08-01T01:19:14.083+0900', 'augustine.metz@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2186][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.084+0900', '2022-08-01T01:19:14.084+0900', 'ping.king@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2187][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.084+0900', '2022-08-01T01:19:14.084+0900', 'edith.grimes@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2187][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.085+0900', '2022-08-01T01:19:14.085+0900', 'mathew.stracke@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2188][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.085+0900', '2022-08-01T01:19:14.085+0900', 'tennie.daugherty.i@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2189][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.086+0900', '2022-08-01T01:19:14.086+0900', 'dominique.mante@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2189][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.087+0900', '2022-08-01T01:19:14.087+0900', 'otha.strosin@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2190][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.087+0900', '2022-08-01T01:19:14.087+0900', 'carola.hodkiewicz.ii@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2191][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.088+0900', '2022-08-01T01:19:14.088+0900', 'fr.ahmad.auer@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2191][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.089+0900', '2022-08-01T01:19:14.089+0900', 'merle.hills@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2192][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.090+0900', '2022-08-01T01:19:14.090+0900', 'odelia.jones@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2193][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.090+0900', '2022-08-01T01:19:14.090+0900', 'stacie.volkman@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2194][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.091+0900', '2022-08-01T01:19:14.091+0900', 'tina.hickle@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2194][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.092+0900', '2022-08-01T01:19:14.092+0900', 'ivan.osinski@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2195][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.092+0900', '2022-08-01T01:19:14.092+0900', 'mrs.humberto.lesch@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2195][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.093+0900', '2022-08-01T01:19:14.093+0900', 'milan.cormier@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2196][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.094+0900', '2022-08-01T01:19:14.094+0900', 'the.hon.cherrie.frami@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2197][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.094+0900', '2022-08-01T01:19:14.094+0900', 'jana.fritsch@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2197][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.095+0900', '2022-08-01T01:19:14.095+0900', 'milan.ullrich.i@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2198][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.096+0900', '2022-08-01T01:19:14.096+0900', 'domenic.runolfsson@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2199][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.096+0900', '2022-08-01T01:19:14.096+0900', 'rep.pasquale.douglas@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2199][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.097+0900', '2022-08-01T01:19:14.097+0900', 'dominica.frami@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2200][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.098+0900', '2022-08-01T01:19:14.098+0900', 'daria.bergnaum@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2201][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.098+0900', '2022-08-01T01:19:14.098+0900', 'claribel.stokes@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2201][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.099+0900', '2022-08-01T01:19:14.099+0900', 'geoffrey.quitzon@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2202][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.100+0900', '2022-08-01T01:19:14.100+0900', 'wilson.lockman.dvm@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2203][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.100+0900', '2022-08-01T01:19:14.100+0900', 'jenine.greenholt@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2203][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.101+0900', '2022-08-01T01:19:14.101+0900', 'rep.arthur.champlin@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2204][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.101+0900', '2022-08-01T01:19:14.101+0900', 'jackqueline.rolfson@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2205][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.102+0900', '2022-08-01T01:19:14.102+0900', 'bibi.zulauf@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2205][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.103+0900', '2022-08-01T01:19:14.103+0900', 'caleb.gorczany@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2206][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.103+0900', '2022-08-01T01:19:14.103+0900', 'rosette.romaguera@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2206][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.104+0900', '2022-08-01T01:19:14.104+0900', 'kent.huels@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2207][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.105+0900', '2022-08-01T01:19:14.105+0900', 'sen.adam.stracke@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2208][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.105+0900', '2022-08-01T01:19:14.105+0900', 'elyse.douglas.md@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2208][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.106+0900', '2022-08-01T01:19:14.106+0900', 'ashanti.d''amore@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2209][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.107+0900', '2022-08-01T01:19:14.107+0900', 'jenae.corwin@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2210][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.107+0900', '2022-08-01T01:19:14.107+0900', 'nichole.sanford@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2210][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.108+0900', '2022-08-01T01:19:14.108+0900', 'candyce.witting@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2211][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.108+0900', '2022-08-01T01:19:14.108+0900', 'shaun.o''reilly@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2212][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.109+0900', '2022-08-01T01:19:14.109+0900', 'trenton.schroeder.ii@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2212][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.110+0900', '2022-08-01T01:19:14.110+0900', 'tessa.schiller@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2213][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.110+0900', '2022-08-01T01:19:14.110+0900', 'carla.reinger.jr@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2214][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.111+0900', '2022-08-01T01:19:14.111+0900', 'gerard.weissnat.v@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2214][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.112+0900', '2022-08-01T01:19:14.112+0900', 'fanny.murazik@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2215][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.112+0900', '2022-08-01T01:19:14.112+0900', 'msgr.terrell.waters@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2215][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.113+0900', '2022-08-01T01:19:14.113+0900', 'prof.daniel.mann@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2216][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.114+0900', '2022-08-01T01:19:14.114+0900', 'viva.torp@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2217][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.114+0900', '2022-08-01T01:19:14.114+0900', 'mr.morgan.nolan@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2217][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.115+0900', '2022-08-01T01:19:14.115+0900', 'carly.gusikowski.vm@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2218][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.116+0900', '2022-08-01T01:19:14.116+0900', 'charlotte.gerhold@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2219][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.116+0900', '2022-08-01T01:19:14.116+0900', 'elvin.schiller@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2219][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.117+0900', '2022-08-01T01:19:14.117+0900', 'julian.parker@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2220][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.117+0900', '2022-08-01T01:19:14.117+0900', 'murray.steuber@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2220][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.118+0900', '2022-08-01T01:19:14.118+0900', 'ambrose.hirthe@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2221][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.118+0900', '2022-08-01T01:19:14.118+0900', 'tesha.white.vm@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2221][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.119+0900', '2022-08-01T01:19:14.119+0900', 'claudie.cartwright@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2222][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.120+0900', '2022-08-01T01:19:14.120+0900', 'amb.floyd.lehner@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2223][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.120+0900', '2022-08-01T01:19:14.120+0900', 'cedric.sipes@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2223][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.121+0900', '2022-08-01T01:19:14.121+0900', 'jefferey.casper@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2224][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.121+0900', '2022-08-01T01:19:14.121+0900', 'orval.emard@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2224][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.122+0900', '2022-08-01T01:19:14.122+0900', 'louann.stark@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2225][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.123+0900', '2022-08-01T01:19:14.123+0900', 'belva.kemmer.sr@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2226][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.123+0900', '2022-08-01T01:19:14.123+0900', 'zina.hansen.jd@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2226][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.124+0900', '2022-08-01T01:19:14.124+0900', 'stuart.mcclure.dc@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2227][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.124+0900', '2022-08-01T01:19:14.124+0900', 'claude.huel@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2227][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.125+0900', '2022-08-01T01:19:14.125+0900', 'eleanore.dach@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2228][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.125+0900', '2022-08-01T01:19:14.125+0900', 'matha.kuphal.v@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2229][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.126+0900', '2022-08-01T01:19:14.126+0900', 'mr.lucio.gislason@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2229][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.127+0900', '2022-08-01T01:19:14.127+0900', 'mirian.greenholt@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2230][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.127+0900', '2022-08-01T01:19:14.127+0900', 'marlin.satterfield@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2230][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.128+0900', '2022-08-01T01:19:14.128+0900', 'venita.ritchie@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2231][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.128+0900', '2022-08-01T01:19:14.128+0900', 'franklyn.wilkinson.i@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2231][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.129+0900', '2022-08-01T01:19:14.129+0900', 'amb.rudolph.grant@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2232][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.129+0900', '2022-08-01T01:19:14.129+0900', 'nicolas.blanda@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2232][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.130+0900', '2022-08-01T01:19:14.130+0900', 'herta.labadie@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2233][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.130+0900', '2022-08-01T01:19:14.130+0900', 'lolita.weimann@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2233][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.131+0900', '2022-08-01T01:19:14.131+0900', 'mrs.cedric.herzog@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2234][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.131+0900', '2022-08-01T01:19:14.131+0900', 'desmond.erdman@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2234][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.132+0900', '2022-08-01T01:19:14.132+0900', 'richie.dibbert.dds@yahoo.test', '1234', 'USER') 
[2022-08-01 01:19:14:2235][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.132+0900', '2022-08-01T01:19:14.132+0900', 'laure.spinka.dvm@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2235][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.133+0900', '2022-08-01T01:19:14.133+0900', 'dr.alonso.bartell@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2236][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.134+0900', '2022-08-01T01:19:14.134+0900', 'edwin.paucek@hotmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2237][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.134+0900', '2022-08-01T01:19:14.134+0900', 'gov.britney.prosacco@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2237][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:19:14.135+0900', '2022-08-01T01:19:14.135+0900', 'suanne.lang@gmail.test', '1234', 'USER') 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=30, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=89, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=15, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2240][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=5, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=24, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=58, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=74, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=68, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=77, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=10, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=20, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=99, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=77, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=22, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=79, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2241][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=61, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=22, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=67, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=90, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=42, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=39, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=78, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=7, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=34, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=2, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=35, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=85, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=71, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=51, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=24, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=40, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2242][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=87, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=54, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=16, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=8, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=76, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=57, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=24, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=98, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=5, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=75, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=26, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=86, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=11, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=64, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=95, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=76, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=42, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=22, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=88, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=52, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2243][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Actually, I didn't make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn't bring that up, actually.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=1, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=86, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=77, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=73, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=64, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=39, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=40, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=28, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=3, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=85, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=79, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=84, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=28, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=92, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=49, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2244][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:19:14:2250][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.147+0900', '2022-08-01T01:19:14.147+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 44, 'Canterbury') 
[2022-08-01 01:19:14:2251][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.149+0900', '2022-08-01T01:19:14.149+0900', 'Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', 30, 'Lightbreaker') 
[2022-08-01 01:19:14:2252][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.149+0900', '2022-08-01T01:19:14.149+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 25, 'Lightbreaker') 
[2022-08-01 01:19:14:2253][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.150+0900', '2022-08-01T01:19:14.150+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 45, 'Marasmus') 
[2022-08-01 01:19:14:2253][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.151+0900', '2022-08-01T01:19:14.151+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 89, 'Anubis') 
[2022-08-01 01:19:14:2254][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.151+0900', '2022-08-01T01:19:14.151+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 15, 'Lightbreaker') 
[2022-08-01 01:19:14:2255][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.152+0900', '2022-08-01T01:19:14.152+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 5, 'Nauvoo') 
[2022-08-01 01:19:14:2255][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.153+0900', '2022-08-01T01:19:14.153+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 63, 'Nephthys') 
[2022-08-01 01:19:14:2256][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.153+0900', '2022-08-01T01:19:14.153+0900', 'The orthogonal features, when combined, can explode into complexity.', 24, 'Rocinante') 
[2022-08-01 01:19:14:2256][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.154+0900', '2022-08-01T01:19:14.154+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 58, 'Aristophanes') 
[2022-08-01 01:19:14:2257][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.154+0900', '2022-08-01T01:19:14.154+0900', 'The orthogonal features, when combined, can explode into complexity.', 41, 'Schiaparelli') 
[2022-08-01 01:19:14:2257][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.155+0900', '2022-08-01T01:19:14.155+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 29, 'S.A. Corey') 
[2022-08-01 01:19:14:2258][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.156+0900', '2022-08-01T01:19:14.156+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 74, 'Donnager') 
[2022-08-01 01:19:14:2259][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.156+0900', '2022-08-01T01:19:14.156+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 68, 'Nauvoo') 
[2022-08-01 01:19:14:2259][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.157+0900', '2022-08-01T01:19:14.157+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 81, 'Lightbreaker') 
[2022-08-01 01:19:14:2260][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.158+0900', '2022-08-01T01:19:14.158+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 77, 'Koto') 
[2022-08-01 01:19:14:2261][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.158+0900', '2022-08-01T01:19:14.158+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 10, 'Donnager') 
[2022-08-01 01:19:14:2261][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.159+0900', '2022-08-01T01:19:14.159+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 20, 'Lucien') 
[2022-08-01 01:19:14:2262][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.159+0900', '2022-08-01T01:19:14.159+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 99, 'Rocinante') 
[2022-08-01 01:19:14:2263][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.160+0900', '2022-08-01T01:19:14.160+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 77, 'Tanaka') 
[2022-08-01 01:19:14:2263][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.161+0900', '2022-08-01T01:19:14.161+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 22, 'Knight') 
[2022-08-01 01:19:14:2264][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.161+0900', '2022-08-01T01:19:14.161+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 63, 'Kingfisher') 
[2022-08-01 01:19:14:2264][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.162+0900', '2022-08-01T01:19:14.162+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 79, 'Lightbreaker') 
[2022-08-01 01:19:14:2265][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.162+0900', '2022-08-01T01:19:14.162+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 61, 'Marasmus') 
[2022-08-01 01:19:14:2265][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.163+0900', '2022-08-01T01:19:14.163+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 22, 'Rocinante') 
[2022-08-01 01:19:14:2266][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.163+0900', '2022-08-01T01:19:14.163+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 67, 'Aristophanes') 
[2022-08-01 01:19:14:2266][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.164+0900', '2022-08-01T01:19:14.164+0900', 'Smart people underestimate the ordinarity of ordinary people.', 41, 'Kittur Chennamma') 
[2022-08-01 01:19:14:2267][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.165+0900', '2022-08-01T01:19:14.165+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 90, 'S.A. Corey') 
[2022-08-01 01:19:14:2268][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.165+0900', '2022-08-01T01:19:14.165+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 42, 'Lucien') 
[2022-08-01 01:19:14:2268][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.166+0900', '2022-08-01T01:19:14.166+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 39, 'Aristophanes') 
[2022-08-01 01:19:14:2269][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.166+0900', '2022-08-01T01:19:14.166+0900', 'Smart people underestimate the ordinarity of ordinary people.', 78, 'Kingfisher') 
[2022-08-01 01:19:14:2269][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.167+0900', '2022-08-01T01:19:14.167+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 7, 'Nauvoo') 
[2022-08-01 01:19:14:2270][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.168+0900', '2022-08-01T01:19:14.168+0900', 'Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', 34, 'Koto') 
[2022-08-01 01:19:14:2270][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.168+0900', '2022-08-01T01:19:14.168+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 45, 'Knight') 
[2022-08-01 01:19:14:2271][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.169+0900', '2022-08-01T01:19:14.169+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 2, 'Donnager') 
[2022-08-01 01:19:14:2272][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.169+0900', '2022-08-01T01:19:14.169+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 44, 'Aristophanes') 
[2022-08-01 01:19:14:2272][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.170+0900', '2022-08-01T01:19:14.170+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 35, 'Canterbury') 
[2022-08-01 01:19:14:2273][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.170+0900', '2022-08-01T01:19:14.170+0900', 'The orthogonal features, when combined, can explode into complexity.', 85, 'S.A. Corey') 
[2022-08-01 01:19:14:2273][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.171+0900', '2022-08-01T01:19:14.171+0900', 'The orthogonal features, when combined, can explode into complexity.', 71, 'Anubis') 
[2022-08-01 01:19:14:2273][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.171+0900', '2022-08-01T01:19:14.171+0900', 'The orthogonal features, when combined, can explode into complexity.', 51, 'Canterbury') 
[2022-08-01 01:19:14:2274][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.172+0900', '2022-08-01T01:19:14.172+0900', 'Smart people underestimate the ordinarity of ordinary people.', 29, 'Aristophanes') 
[2022-08-01 01:19:14:2275][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.172+0900', '2022-08-01T01:19:14.172+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 36, 'Anubis') 
[2022-08-01 01:19:14:2275][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.173+0900', '2022-08-01T01:19:14.173+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 25, 'Canterbury') 
[2022-08-01 01:19:14:2276][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.173+0900', '2022-08-01T01:19:14.173+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 24, 'Kittur Chennamma') 
[2022-08-01 01:19:14:2276][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.174+0900', '2022-08-01T01:19:14.174+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 6, 'Kittur Chennamma') 
[2022-08-01 01:19:14:2277][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.174+0900', '2022-08-01T01:19:14.174+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 40, 'S.A. Corey') 
[2022-08-01 01:19:14:2277][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.175+0900', '2022-08-01T01:19:14.175+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 100, 'Nauvoo') 
[2022-08-01 01:19:14:2279][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.175+0900', '2022-08-01T01:19:14.175+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 87, 'Knight') 
[2022-08-01 01:19:14:2279][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.177+0900', '2022-08-01T01:19:14.177+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 23, 'Aristophanes') 
[2022-08-01 01:19:14:2280][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.177+0900', '2022-08-01T01:19:14.177+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 54, 'Schiaparelli') 
[2022-08-01 01:19:14:2280][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.178+0900', '2022-08-01T01:19:14.178+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 16, 'Razorback') 
[2022-08-01 01:19:14:2281][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.179+0900', '2022-08-01T01:19:14.179+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 8, 'Nephthys') 
[2022-08-01 01:19:14:2282][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.179+0900', '2022-08-01T01:19:14.179+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 76, 'Hammurabi') 
[2022-08-01 01:19:14:2282][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.180+0900', '2022-08-01T01:19:14.180+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 57, 'Donnager') 
[2022-08-01 01:19:14:2283][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.180+0900', '2022-08-01T01:19:14.180+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 36, 'Razorback') 
[2022-08-01 01:19:14:2283][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.181+0900', '2022-08-01T01:19:14.181+0900', 'In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', 24, 'Lightbreaker') 
[2022-08-01 01:19:14:2283][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.181+0900', '2022-08-01T01:19:14.181+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 98, 'Callisto''s Dream') 
[2022-08-01 01:19:14:2284][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.182+0900', '2022-08-01T01:19:14.182+0900', 'Smart people underestimate the ordinarity of ordinary people.', 23, 'Marasmus') 
[2022-08-01 01:19:14:2284][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.182+0900', '2022-08-01T01:19:14.182+0900', 'Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', 44, 'Anubis') 
[2022-08-01 01:19:14:2285][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.183+0900', '2022-08-01T01:19:14.183+0900', 'Smart people underestimate the ordinarity of ordinary people.', 62, 'Nauvoo') 
[2022-08-01 01:19:14:2287][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.183+0900', '2022-08-01T01:19:14.183+0900', 'Smart people underestimate the ordinarity of ordinary people.', 5, 'Nephthys') 
[2022-08-01 01:19:14:2287][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.185+0900', '2022-08-01T01:19:14.185+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 45, 'Tanaka') 
[2022-08-01 01:19:14:2288][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.185+0900', '2022-08-01T01:19:14.185+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 75, 'Donnager') 
[2022-08-01 01:19:14:2288][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.186+0900', '2022-08-01T01:19:14.186+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 26, 'Aristophanes') 
[2022-08-01 01:19:14:2289][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.186+0900', '2022-08-01T01:19:14.186+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 86, 'S.A. Corey') 
[2022-08-01 01:19:14:2289][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.187+0900', '2022-08-01T01:19:14.187+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 11, 'Lightbreaker') 
[2022-08-01 01:19:14:2290][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.188+0900', '2022-08-01T01:19:14.188+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 64, 'Donnager') 
[2022-08-01 01:19:14:2291][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.188+0900', '2022-08-01T01:19:14.188+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 25, 'Rocinante') 
[2022-08-01 01:19:14:2291][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.189+0900', '2022-08-01T01:19:14.189+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 95, 'Aristophanes') 
[2022-08-01 01:19:14:2292][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.189+0900', '2022-08-01T01:19:14.189+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 76, 'Callisto''s Dream') 
[2022-08-01 01:19:14:2292][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.190+0900', '2022-08-01T01:19:14.190+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 42, 'Anubis') 
[2022-08-01 01:19:14:2293][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.190+0900', '2022-08-01T01:19:14.190+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 22, 'Hammurabi') 
[2022-08-01 01:19:14:2293][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.191+0900', '2022-08-01T01:19:14.191+0900', 'Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', 88, 'Nauvoo') 
[2022-08-01 01:19:14:2294][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.191+0900', '2022-08-01T01:19:14.191+0900', 'The orthogonal features, when combined, can explode into complexity.', 52, 'Nephthys') 
[2022-08-01 01:19:14:2294][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.192+0900', '2022-08-01T01:19:14.192+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 62, 'Razorback') 
[2022-08-01 01:19:14:2295][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.192+0900', '2022-08-01T01:19:14.192+0900', 'Actually, I didn''t make the claim that Ruby follows the principle of least surprise. Someone felt the design of Ruby follows that philosophy, so they started saying that. I didn''t bring that up, actually.', 13, 'Anubis') 
[2022-08-01 01:19:14:2295][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.193+0900', '2022-08-01T01:19:14.193+0900', 'Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', 25, 'Kingfisher') 
[2022-08-01 01:19:14:2296][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.193+0900', '2022-08-01T01:19:14.193+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 1, 'Nauvoo') 
[2022-08-01 01:19:14:2296][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.194+0900', '2022-08-01T01:19:14.194+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 86, 'Callisto''s Dream') 
[2022-08-01 01:19:14:2297][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.194+0900', '2022-08-01T01:19:14.194+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 77, 'Donnager') 
[2022-08-01 01:19:14:2297][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.195+0900', '2022-08-01T01:19:14.195+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 17, 'Rocinante') 
[2022-08-01 01:19:14:2298][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.195+0900', '2022-08-01T01:19:14.195+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 72, 'Donnager') 
[2022-08-01 01:19:14:2298][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.196+0900', '2022-08-01T01:19:14.196+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 13, 'Anubis') 
[2022-08-01 01:19:14:2299][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.196+0900', '2022-08-01T01:19:14.196+0900', 'Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', 73, 'Canterbury') 
[2022-08-01 01:19:14:2299][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.197+0900', '2022-08-01T01:19:14.197+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 64, 'Koto') 
[2022-08-01 01:19:14:2300][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.197+0900', '2022-08-01T01:19:14.197+0900', 'It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', 39, 'Donnager') 
[2022-08-01 01:19:14:2300][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.198+0900', '2022-08-01T01:19:14.198+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 40, 'Nephthys') 
[2022-08-01 01:19:14:2301][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.198+0900', '2022-08-01T01:19:14.198+0900', 'Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn''t it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', 28, 'Callisto''s Dream') 
[2022-08-01 01:19:14:2301][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.199+0900', '2022-08-01T01:19:14.199+0900', 'The orthogonal features, when combined, can explode into complexity.', 45, 'S.A. Corey') 
[2022-08-01 01:19:14:2302][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.199+0900', '2022-08-01T01:19:14.199+0900', 'Smart people underestimate the ordinarity of ordinary people.', 60, 'Canterbury') 
[2022-08-01 01:19:14:2302][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.200+0900', '2022-08-01T01:19:14.200+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 3, 'Callisto''s Dream') 
[2022-08-01 01:19:14:2303][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.200+0900', '2022-08-01T01:19:14.200+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 85, 'Anubis') 
[2022-08-01 01:19:14:2303][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.201+0900', '2022-08-01T01:19:14.201+0900', 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', 79, 'Donnager') 
[2022-08-01 01:19:14:2304][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.201+0900', '2022-08-01T01:19:14.201+0900', 'Smart people underestimate the ordinarity of ordinary people.', 29, 'Razorback') 
[2022-08-01 01:19:14:2304][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.202+0900', '2022-08-01T01:19:14.202+0900', 'Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', 84, 'Knight') 
[2022-08-01 01:19:14:2305][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.202+0900', '2022-08-01T01:19:14.202+0900', 'I believe consistency and orthogonality are tools of design, not the primary goal in design.', 28, 'Lucien') 
[2022-08-01 01:19:14:2305][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.203+0900', '2022-08-01T01:19:14.203+0900', 'Man is driven to create; I know I really love to create things. And while I''m not good at painting, drawing, or music, I can write software.', 6, 'S.A. Corey') 
[2022-08-01 01:19:14:2305][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.203+0900', '2022-08-01T01:19:14.203+0900', 'Plant a memory, plant a tree, do it today for tomorrow.', 92, 'Anubis') 
[2022-08-01 01:19:14:2306][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.203+0900', '2022-08-01T01:19:14.203+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 49, 'Kittur Chennamma') 
[2022-08-01 01:19:14:2306][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:19:14.204+0900', '2022-08-01T01:19:14.204+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 6, 'Lucien') 
[2022-08-01 01:19:14:2313][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:19:14 | OperationTime : 1ms 
[2022-08-01 01:34:30:918925][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:34:30:918944][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:34:30:919017][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:34:34:450][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9064 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:34:34:452][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:34:34:452][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:34:34:1010][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:34:34:1057][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 39 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:34:35:1419][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:34:35:1451][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:34:35:1452][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:34:35:1452][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:34:35:1553][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:34:35:1554][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 1061 ms 
[2022-08-01 01:34:35:1822][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:34:35:1884][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:34:35:2019][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:34:35:2059][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:34:36:2142][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:34:36:2152][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:34:36:2531][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285276449 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:34:36:2534][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285276452 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:34:36:2537][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285276455 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:34:36:2537][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:34:36:2541][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:34:37:3159][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:34:37:3172][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:34:37:3177][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 3.044 seconds (JVM running for 3.52) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=83, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=88, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=8, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=43, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=33, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=59, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=80, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3191][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=0, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=97, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=41, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=64, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=86, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=38, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=53, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3192][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Language designers want to design the perfect language. They want to be able to say, 'My language is perfect. It can do everything.' But it's just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=17, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=98, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=59, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=89, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=12, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=56, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=83, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3193][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=48, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=28, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=45, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='You want to enjoy life, don't you? If you get your job done quickly and your job is fun, that's good isn't it? That's the purpose of life, partly. Your life is better.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=6, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kingfisher', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=97, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='Most programs are not write-once. They are reworked and rewritten again and again in their lived. Bugs must be debugged. Changing requirements and the need for increased functionality mean the program itself may be modified on an ongoing basis. During this process, human beings must be able to read and understand the original code. It is therefore more important by far for humans to be able to understand the program than it is for the computer.', member=Member(id=20, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=44, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Corvette', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=61, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=50, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3194][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=8, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=47, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=21, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nephthys', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=72, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=94, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Canterbury', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=74, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=53, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=14, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', member=Member(id=80, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=59, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=96, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3195][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=11, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=75, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=21, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=49, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Sometimes people jot down pseudo-code on paper. If that pseudo-code runs directly on their computers, its best, isn't it? Ruby tries to be like that, like pseudo-code that runs. Python people say that too.', member=Member(id=1, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=32, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=75, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Anubis', content='I believe consistency and orthogonality are tools of design, not the primary goal in design.', member=Member(id=58, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Razorback', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=61, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=18, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=38, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=95, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3196][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=31, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lightbreaker', content='Smart people underestimate the ordinarity of ordinary people.', member=Member(id=100, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='In our daily lives as programmers, we process text strings a lot. So I tried to work hard on text processing, namely the string class and regular expressions. Regular expressions are built into the language and are very tuned up for use.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', member=Member(id=55, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='S.A. Corey', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=13, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Koto', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=91, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So you are working before the computer, but with a human behind the computer.', member=Member(id=23, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=74, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Often people, especially computer engineers, focus on the machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines.', member=Member(id=12, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Rocinante', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=80, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=60, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Aristophanes', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=36, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=81, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=84, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=62, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=1, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=59, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3197][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Tanaka', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=39, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Schiaparelli', content='Plant a memory, plant a tree, do it today for tomorrow.', member=Member(id=10, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='Man is driven to create; I know I really love to create things. And while I'm not good at painting, drawing, or music, I can write software.', member=Member(id=25, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', member=Member(id=71, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Marasmus', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=63, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Kittur Chennamma', content='Most of the tasks we do are for humans. For example, a tax calculation is counting numbers so the government can pull money out from my wallet, but government consists of humans.', member=Member(id=73, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='I didn't work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it's not perfect for you. The perfect language for Guido van Rossum is probably Python.', member=Member(id=39, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='The orthogonal features, when combined, can explode into complexity.', member=Member(id=61, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Hammurabi', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=34, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Lucien', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=38, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Nauvoo', content='Because of the Turing completeness theory, everything one Turing-complete language can do can theoretically be done by another Turing-complete language, but at a different cost. You can do everything in assembler, but no one wants to program in assembler anymore.', member=Member(id=85, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Callisto's Dream', content='People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do.', member=Member(id=43, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Donnager', content='Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only.', member=Member(id=29, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3198][main] [32m INFO[0;39m c.e.simpleblog.config.InitData [36mc.e.s.c.InitData[0;39m [32mgeneratePost[0;39m 
 insert Post(id=null, title='Knight', content='It is not the responsibility of the language to force good looking code, but the language should make good looking code possible.', member=Member(id=57, email='', password='', role=USER)) 
[2022-08-01 01:34:37:3240][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 4ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.144+0900', '2022-08-01T01:34:37.144+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 83, 'Nephthys') 
[2022-08-01 01:34:37:3243][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.160+0900', '2022-08-01T01:34:37.160+0900', 'I hope to see Ruby help every programmer in the world to be productive, and to enjoy programming, and to be happy. That is the primary purpose of Ruby language.', 88, 'Anubis') 
[2022-08-01 01:34:37:3244][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.161+0900', '2022-08-01T01:34:37.161+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 8, 'S.A. Corey') 
[2022-08-01 01:34:37:3245][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.162+0900', '2022-08-01T01:34:37.162+0900', 'I believe that the purpose of life is, at least in part, to be happy. Based on this belief, Ruby is designed to make programming not only easy but also fun. It allows you to concentrate on the creative side of programming, with less stress.', 43, 'Knight') 
[2022-08-01 01:34:37:3246][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.163+0900', '2022-08-01T01:34:37.163+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 33, 'Tanaka') 
[2022-08-01 01:34:37:3247][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.164+0900', '2022-08-01T01:34:37.164+0900', 'You want to enjoy life, don''t you? If you get your job done quickly and your job is fun, that''s good isn''t it? That''s the purpose of life, partly. Your life is better.', 59, 'Razorback') 
[2022-08-01 01:34:37:3249][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.165+0900', '2022-08-01T01:34:37.165+0900', 'People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that''s what I''ve tried to do.', 25, 'Kittur Chennamma') 
[2022-08-01 01:34:37:3250][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.167+0900', '2022-08-01T01:34:37.167+0900', 'I didn''t work hard to make Ruby perfect for everyone, because you feel differently from me. No language can be perfect for everyone. I tried to make Ruby perfect for me, but maybe it''s not perfect for you. The perfect language for Guido van Rossum is probably Python.', 80, 'Hammurabi') 
[2022-08-01 01:34:37:3251][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.168+0900', '2022-08-01T01:34:37.168+0900', 'Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, ''I was surprised by this feature of the language, so therefore Ruby violates the principle of least surprise.'' Wait. Wait. The principle of least surprise is not for you only.', 91, 'S.A. Corey') 
[2022-08-01 01:34:37:3251][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.169+0900', '2022-08-01T01:34:37.169+0900', 'From the viewpoint of what you can do, therefore, languages do differ - but the differences are limited. For example, Python and Ruby provide almost the same power to the programmer.', 63, 'Donnager') 
[2022-08-01 01:34:37:3256][main] [33m WARN[0;39m o.m.jdbc.message.server.ErrorPacket [36mo.m.j.m.s.ErrorPacket[0;39m [32mwarn[0;39m 
 Error: 1452-23000: Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:34:37:3257][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 4ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T01:34:37.170+0900', '2022-08-01T01:34:37.170+0900', 'Language designers want to design the perfect language. They want to be able to say, ''My language is perfect. It can do everything.'' But it''s just plain impossible to design a perfect language, because there are two ways to look at a language. One way is by looking at what can be done with that language. The other is by looking at how we feel using that language-how we feel while programming.', 0, 'Donnager') 
[2022-08-01 01:34:37:3257][main] [33m WARN[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 SQL Error: 1452, SQLState: 23000 
[2022-08-01 01:34:37:3257][main] [31mERROR[0;39m o.h.e.jdbc.spi.SqlExceptionHelper [36mo.h.e.j.s.SqlExceptionHelper[0;39m [32mlogExceptions[0;39m 
 (conn=386) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`)) 
[2022-08-01 01:34:37:3261][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:34:37 | OperationTime : 0ms 
[2022-08-01 01:34:37:3272][main] [31mERROR[0;39m o.s.boot.SpringApplication [36mo.s.b.SpringApplication[0;39m [32mreportFailure[0;39m 
 Application run failed 
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.MethodInvocationValidator.invoke(MethodInvocationValidator.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.saveAll(Unknown Source)
	at com.example.simpleblog.config.InitData.init(InitData.kt:37)
	at com.example.simpleblog.config.InitData$$FastClassBySpringCGLIB$$45b2271d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.simpleblog.config.InitData$$EnhancerBySpringCGLIB$$4fcf58d0.init(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:82)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:82)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.simpleblog.SimpleBlogApplicationKt.main(SimpleBlogApplication.kt:28)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy122.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:700)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 44 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=386) Cannot add or update a child row: a foreign key constraint fails (`kotilnblog`.`post`, CONSTRAINT `FKa9v8iie588k1ltvt2nsepu9gi` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:288)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:368)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:137)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:819)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:758)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:677)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:620)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:322)
	at org.mariadb.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:299)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.executeUpdate(PreparedStatementWrapper.java:94)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 92 common frames omitted
[2022-08-01 01:34:37:3283][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:34:37:3283][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:34:37:3287][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:35:06:296][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9081 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:35:06:297][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:35:06:300][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:35:06:678][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:35:06:702][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 20 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:35:07:947][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:35:07:955][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:35:07:955][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:35:07:955][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:35:07:1048][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:35:07:1048][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 725 ms 
[2022-08-01 01:35:07:1179][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:35:07:1209][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:35:07:1322][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:35:07:1367][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:35:07:1417][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:35:07:1430][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:35:08:1993][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285308230 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:35:08:2003][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285308240 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:35:08:2008][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285308245 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:35:08:2009][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:35:08:2014][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:35:09:2856][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:35:09:2870][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:35:09:2877][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.795 seconds (JVM running for 3.092) 
[2022-08-01 01:35:15:9150][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 01:35:15:9151][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 01:35:15:9159][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 7 ms 
[2022-08-01 01:35:15:9282][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:15 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        post0_.`id` as id1_2_,
        post0_.`create_at` as create_a2_2_,
        post0_.`update_at` as update_a3_2_,
        post0_.`content` as content4_2_,
        post0_.`member_id` as member_i6_2_,
        post0_.`title` as title5_2_ 
    from
        `Post` post0_ 
    order by
        post0_.`id` desc limit 10 
[2022-08-01 01:35:15:9343][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:15 | OperationTime : 5ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        post0_.`id` as id1_2_,
        post0_.`create_at` as create_a2_2_,
        post0_.`update_at` as update_a3_2_,
        post0_.`content` as content4_2_,
        post0_.`member_id` as member_i6_2_,
        post0_.`title` as title5_2_ 
    from
        `Post` post0_ 
[2022-08-01 01:35:15:9364][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:15 | OperationTime : 5ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        member0_.`id` as id1_1_0_,
        member0_.`create_at` as create_a2_1_0_,
        member0_.`update_at` as update_a3_1_0_,
        member0_.`email` as email4_1_0_,
        member0_.`password` as password5_1_0_,
        member0_.`role` as role6_1_0_ 
    from
        `Member` member0_ 
    where
        member0_.`id` in (
            6, 49, 92, 28, 84, 29, 79, 85, 3, 44, 30, 25, 45, 89, 15, 5, 63, 24, 58, 41, 74, 68, 81, 77, 10, 20, 99, 22, 61, 67, 90, 42, 39, 78, 7, 34, 2, 35, 71, 51, 36, 40, 100, 87, 23, 54, 16, 8, 76, 57, 98, 62, 75, 26, 86, 11, 64, 95, 88, 52, 13, 1
        ) 
[2022-08-01 01:35:15:9373][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:15 | OperationTime : 0ms 
[2022-08-01 01:35:26:19944][http-nio-9000-exec-2] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:26 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        member0_.`id` as id1_1_,
        member0_.`create_at` as create_a2_1_,
        member0_.`update_at` as update_a3_1_,
        member0_.`email` as email4_1_,
        member0_.`password` as password5_1_,
        member0_.`role` as role6_1_ 
    from
        `Member` member0_ 
    order by
        member0_.`id` desc limit 10 
[2022-08-01 01:35:26:19950][http-nio-9000-exec-2] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:26 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        member0_.`id` as id1_1_,
        member0_.`create_at` as create_a2_1_,
        member0_.`update_at` as update_a3_1_,
        member0_.`email` as email4_1_,
        member0_.`password` as password5_1_,
        member0_.`role` as role6_1_ 
    from
        `Member` member0_ 
[2022-08-01 01:35:26:19960][http-nio-9000-exec-2] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:35:26 | OperationTime : 0ms 
[2022-08-01 01:37:00:114095][http-nio-9000-exec-6] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:37:00 | OperationTime : 6ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:37:00.316+0900', '2022-08-01T01:37:00.316+0900', 'test_12deb519b6cf', 'test_8a9cd03c0eb1', 'USER') 
[2022-08-01 01:37:00:114119][http-nio-9000-exec-6] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:37:00 | OperationTime : 19ms 
[2022-08-01 01:38:02:176123][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:38:02:176127][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:38:02:176139][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:38:05:280][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9132 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:38:05:282][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:38:05:282][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:38:05:813][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:38:05:841][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 24 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:38:05:1093][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:38:05:1097][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:38:05:1097][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:38:05:1097][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:38:06:1147][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:38:06:1148][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 835 ms 
[2022-08-01 01:38:06:1278][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:38:06:1304][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:38:06:1386][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:38:06:1423][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:38:06:1452][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:38:06:1460][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:38:06:1802][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285486681 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:38:06:1806][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285486685 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:38:06:1809][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285486688 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:38:06:1810][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:38:06:1814][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:38:07:2459][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:38:07:2474][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:38:07:2479][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.399 seconds (JVM running for 2.687) 
[2022-08-01 01:38:34:29887][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 01:38:34:29887][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 01:38:34:29890][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 3 ms 
[2022-08-01 01:38:34:29918][http-nio-9000-exec-1] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type '*/*;charset=UTF-8' not supported] 
[2022-08-01 01:39:02:57711][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:39:02 | OperationTime : 5ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:39:02.570+0900', '2022-08-01T01:39:02.570+0900', 'test_12deb519b6cf', 'test_8a9cd03c0eb1', 'USER') 
[2022-08-01 01:39:02:57724][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:39:02 | OperationTime : 3ms 
[2022-08-01 01:39:16:71433][http-nio-9000-exec-5] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Instantiation of [simple type, class com.example.simpleblog.domain.member.MemberSaveReq] value failed for JSON property email due to missing (therefore NULL) value for creator parameter email which is a non-nullable type; nested exception is com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class com.example.simpleblog.domain.member.MemberSaveReq] value failed for JSON property email due to missing (therefore NULL) value for creator parameter email which is a non-nullable type<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 1] (through reference chain: com.example.simpleblog.domain.member.MemberSaveReq["email"])] 
[2022-08-01 01:40:15:130299][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:40:15:130303][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:40:15:130315][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:40:53:291][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9182 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:40:53:293][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:40:53:296][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:40:53:662][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:40:53:686][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 19 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:40:54:894][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:40:54:898][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:40:54:898][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:40:54:898][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:40:54:955][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:40:54:956][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 626 ms 
[2022-08-01 01:40:54:1050][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:40:54:1073][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:40:54:1146][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:40:54:1185][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:40:54:1227][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:40:54:1236][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:40:54:1558][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285654688 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:40:54:1561][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285654691 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:40:54:1565][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285654695 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:40:54:1565][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:40:54:1569][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:40:55:2120][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:40:55:2154][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:40:55:2160][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.08 seconds (JVM running for 2.426) 
[2022-08-01 01:40:59:6843][http-nio-9000-exec-2] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 01:40:59:6844][http-nio-9000-exec-2] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 01:40:59:6847][http-nio-9000-exec-2] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 3 ms 
[2022-08-01 01:41:00:7011][http-nio-9000-exec-2] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:41:00 | OperationTime : 11ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:41:00.111+0900', '2022-08-01T01:41:00.111+0900', 'test_12deb519b6cf', 'test_8a9cd03c0eb1', 'USER') 
[2022-08-01 01:41:00:7025][http-nio-9000-exec-2] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:41:00 | OperationTime : 4ms 
[2022-08-01 01:41:08:15404][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:41:08 | OperationTime : 1ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:41:08.530+0900', '2022-08-01T01:41:08.530+0900', '', 'test_8a9cd03c0eb1', 'USER') 
[2022-08-01 01:41:08:15411][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:41:08 | OperationTime : 4ms 
[2022-08-01 01:42:36:102997][http-nio-9000-exec-6] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:42:36 | OperationTime : 5ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Member` (
            `create_at`, `update_at`, `email`, `password`, `role`
        ) 
    values
        ('2022-08-01T01:42:36.120+0900', '2022-08-01T01:42:36.120+0900', '', 'test_8a9cd03c0eb1', 'USER') 
[2022-08-01 01:42:36:103007][http-nio-9000-exec-6] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 01:42:36 | OperationTime : 8ms 
[2022-08-01 01:42:42:108908][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:42:42:108911][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:42:42:108919][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:42:45:324][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9235 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:42:45:325][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:42:45:325][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:42:45:672][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:42:45:696][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 20 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:42:45:907][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:42:45:911][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:42:45:911][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:42:45:911][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:42:46:963][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:42:46:963][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 615 ms 
[2022-08-01 01:42:46:1036][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:42:46:1063][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:42:46:1155][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:42:46:1197][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:42:46:1229][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:42:46:1238][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:42:46:1528][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285766599 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:42:46:1530][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285766601 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:42:46:1532][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659285766603 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:42:46:1533][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:42:46:1536][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:42:47:2099][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:42:47:2117][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:42:47:2123][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.013 seconds (JVM running for 2.477) 
[2022-08-01 01:42:52:7448][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 01:42:52:7449][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 01:42:52:7454][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 5 ms 
[2022-08-01 01:42:52:7593][http-nio-9000-exec-1] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.example.simpleblog.util.value.CmResDto<?> com.example.simpleblog.api.MemberController.save(com.example.simpleblog.domain.member.MemberSaveReq): [Field error in object 'memberSaveReq' on field 'email': rejected value [null]; codes [NotNull.memberSaveReq.email,NotNull.email,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [memberSaveReq.email,email]; arguments []; default message [email]]; default message [require email]] ] 
[2022-08-01 01:58:39:954580][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:58:39:954600][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 01:58:39:954640][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 01:58:43:347][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 01:58:43:346][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9587 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 01:58:43:348][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 01:58:43:721][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 01:58:43:752][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 27 ms. Found 2 JPA repository interfaces. 
[2022-08-01 01:58:44:1122][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 01:58:44:1150][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:58:44:1150][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 01:58:44:1150][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 01:58:44:1213][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 01:58:44:1213][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 841 ms 
[2022-08-01 01:58:44:1295][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 01:58:44:1321][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 01:58:44:1408][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 01:58:44:1454][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 01:58:44:1546][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 01:58:44:1557][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 01:58:44:1928][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286724944 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:58:44:1932][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286724948 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 01:58:44:1934][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286724950 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 01:58:44:1935][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 01:58:44:1938][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 01:58:45:2586][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 01:58:45:2600][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 01:58:45:2605][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.502 seconds (JVM running for 2.917) 
[2022-08-01 01:59:10:27283][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 01:59:10:27283][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 01:59:10:27285][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 2 ms 
[2022-08-01 01:59:10:27316][http-nio-9000-exec-1] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type '*/*;charset=UTF-8' not supported] 
[2022-08-01 02:00:17:94164][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:00:17:94167][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 02:00:17:94180][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 02:00:19:276][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9626 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 02:00:19:277][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 02:00:19:278][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 02:00:19:627][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 02:00:19:657][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 26 ms. Found 2 JPA repository interfaces. 
[2022-08-01 02:00:19:872][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 02:00:19:878][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:00:19:878][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 02:00:19:878][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 02:00:19:922][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 02:00:19:923][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 624 ms 
[2022-08-01 02:00:19:995][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 02:00:20:1016][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 02:00:20:1083][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 02:00:20:1117][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 02:00:20:1180][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 02:00:20:1220][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 02:00:20:1553][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286820538 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:00:20:1557][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286820542 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 02:00:20:1560][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659286820545 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:00:20:1560][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 02:00:20:1563][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:00:21:2228][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:00:21:2260][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 02:00:21:2269][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.184 seconds (JVM running for 2.48) 
[2022-08-01 02:00:27:8160][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 02:00:27:8161][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 02:00:27:8165][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 4 ms 
[2022-08-01 02:00:27:8211][http-nio-9000-exec-1] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type '*/*;charset=UTF-8' not supported] 
[2022-08-01 02:00:57:38061][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:00:57 | OperationTime : 19ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T02:00:57.011+0900', '2022-08-01T02:00:57.011+0900', 'test_ecb8e8d40e66', 20, 'test_dec6e492a9c3') 
[2022-08-01 02:00:57:38074][http-nio-9000-exec-3] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:00:57 | OperationTime : 6ms 
[2022-08-01 02:01:20:61388][http-nio-9000-exec-4] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 2]] 
[2022-08-01 02:01:32:73974][http-nio-9000-exec-5] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:01:32 | OperationTime : 4ms|
HeFormatSql(P6Spy sql,Hibernate format):
    insert 
    into
        `
        Post` (
            `create_at`, `update_at`, `content`, `member_id`, `title`
        ) 
    values
        ('2022-08-01T02:01:32.950+0900', '2022-08-01T02:01:32.950+0900', 'test_ecb8e8d40e66', 20, 'test_dec6e492a9c3') 
[2022-08-01 02:01:32:73981][http-nio-9000-exec-5] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:01:32 | OperationTime : 2ms 
[2022-08-01 02:01:52:93327][http-nio-9000-exec-7] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 2]] 
[2022-08-01 02:23:46:1408005][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:23:47:1408016][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 02:23:47:1408050][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 02:23:51:575][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9897 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 02:23:51:578][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 02:23:51:581][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 02:23:52:1481][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 02:23:52:1554][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces. 
[2022-08-01 02:23:52:2136][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 02:23:52:2143][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:23:52:2145][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 02:23:52:2146][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 02:23:52:2240][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 02:23:52:2241][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 1610 ms 
[2022-08-01 02:23:53:2497][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 02:23:53:2532][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 02:23:53:2660][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 02:23:53:2698][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 02:23:53:2904][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 02:23:53:2923][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 02:23:54:3409][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288234142 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:23:54:3413][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288234146 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 02:23:54:3416][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288234149 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:23:54:3416][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 02:23:54:3420][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:23:54:4226][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:23:54:4247][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 02:23:54:4254][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 4.148 seconds (JVM running for 4.623) 
[2022-08-01 02:24:02:11307][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 02:24:02:11308][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 02:24:02:11310][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 2 ms 
[2022-08-01 02:24:02:11432][http-nio-9000-exec-1] [33m WARN[0;39m o.s.w.s.m.s.DefaultHandlerExceptionResolver [36mo.s.w.s.m.s.DefaultHandlerExceptionResolver[0;39m [32mlogException[0;39m 
 Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 2]] 
[2022-08-01 02:24:15:24806][http-nio-9000-exec-2] [31mERROR[0;39m c.e.s.e.GlobalExceptionHandler [36mc.e.s.e.GlobalExceptionHandler[0;39m [32mhandleMethodArgumentNotValidException[0;39m 
 handleMethodArgumentNotValidException org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.example.simpleblog.util.value.CmResDto<?> com.example.simpleblog.api.PostController.save(com.example.simpleblog.domain.post.PostSaveReq): [Field error in object 'postSaveReq' on field 'memberId': rejected value [null]; codes [NotNull.postSaveReq.memberId,NotNull.memberId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [postSaveReq.memberId,memberId]; arguments []; default message [memberId]]; default message [require memberId]]  
[2022-08-01 02:24:52:61815][http-nio-9000-exec-3] [31mERROR[0;39m c.e.s.e.GlobalExceptionHandler [36mc.e.s.e.GlobalExceptionHandler[0;39m [32mhandleMethodArgumentNotValidException[0;39m 
 handleMethodArgumentNotValidException org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.example.simpleblog.util.value.CmResDto<?> com.example.simpleblog.api.PostController.save(com.example.simpleblog.domain.post.PostSaveReq): [Field error in object 'postSaveReq' on field 'title': rejected value [null]; codes [NotNull.postSaveReq.title,NotNull.title,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [postSaveReq.title,title]; arguments []; default message [title]]; default message [require title]]  
[2022-08-01 02:25:05:75123][http-nio-9000-exec-4] [31mERROR[0;39m c.e.s.e.GlobalExceptionHandler [36mc.e.s.e.GlobalExceptionHandler[0;39m [32mhandleMethodArgumentNotValidException[0;39m 
 handleMethodArgumentNotValidException org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.example.simpleblog.util.value.CmResDto<?> com.example.simpleblog.api.PostController.save(com.example.simpleblog.domain.post.PostSaveReq) with 2 errors: [Field error in object 'postSaveReq' on field 'title': rejected value [null]; codes [NotNull.postSaveReq.title,NotNull.title,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [postSaveReq.title,title]; arguments []; default message [title]]; default message [require title]] [Field error in object 'postSaveReq' on field 'memberId': rejected value [null]; codes [NotNull.postSaveReq.memberId,NotNull.memberId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [postSaveReq.memberId,memberId]; arguments []; default message [memberId]]; default message [require memberId]]  
[2022-08-01 02:29:38:347509][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:29:38:347512][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 02:29:38:347529][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 02:29:41:458][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 9963 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 02:29:41:460][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 02:29:41:467][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 02:29:41:1030][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 02:29:41:1069][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces. 
[2022-08-01 02:29:41:1369][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 02:29:41:1372][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:29:41:1373][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 02:29:41:1373][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 02:29:41:1421][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 02:29:41:1422][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 927 ms 
[2022-08-01 02:29:42:1495][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 02:29:42:1518][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 02:29:42:1631][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 02:29:42:1677][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 02:29:42:1720][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 02:29:42:1732][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 02:29:42:2070][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288582630 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:29:42:2074][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288582634 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 02:29:42:2080][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288582640 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:29:42:2081][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 02:29:42:2084][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:29:43:2763][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:29:43:2776][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 02:29:43:2786][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.642 seconds (JVM running for 3.137) 
[2022-08-01 02:30:41:61244][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 02:30:41:61245][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 02:30:41:61258][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 13 ms 
[2022-08-01 02:30:41:61349][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:30:41 | OperationTime : 4ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        member0_.`id` as id1_1_0_,
        member0_.`create_at` as create_a2_1_0_,
        member0_.`update_at` as update_a3_1_0_,
        member0_.`email` as email4_1_0_,
        member0_.`password` as password5_1_0_,
        member0_.`role` as role6_1_0_ 
    from
        `Member` member0_ 
    where
        member0_.`id`=1000 
[2022-08-01 02:30:41:61364][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:30:41 | OperationTime : 6ms 
[2022-08-01 02:30:41:61369][http-nio-9000-exec-1] [31mERROR[0;39m o.a.c.c.C.[.[.[.[dispatcherServlet] [36mo.a.c.c.C.[.[.[.[dispatcherServlet][0;39m [32mlog[0;39m 
 Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.example.simpleblog.exception.MemberNotFoundException: 1000 not found] with root cause 
com.example.simpleblog.exception.MemberNotFoundException: 1000 not found
	at com.example.simpleblog.service.MemberService$findMemberById$1.get(MemberService.kt:36)
	at com.example.simpleblog.service.MemberService$findMemberById$1.get(MemberService.kt:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.example.simpleblog.service.MemberService.findMemberById(MemberService.kt:35)
	at com.example.simpleblog.service.MemberService$$FastClassBySpringCGLIB$$fc0996d9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.example.simpleblog.service.MemberService$$EnhancerBySpringCGLIB$$87bb8239.findMemberById(<generated>)
	at com.example.simpleblog.api.MemberController.findById(MemberController.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
[2022-08-01 02:33:21:220467][SpringApplicationShutdownHook] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mdestroy[0;39m 
 Closing JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:33:21:220473][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown initiated... 
[2022-08-01 02:33:21:220487][SpringApplicationShutdownHook] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mclose[0;39m 
 HikariPool-1 - Shutdown completed. 
[2022-08-01 02:33:23:485][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarting[0;39m 
 Starting SimpleBlogApplicationKt using Java 11.0.13 on gangmingyuui-MacBookAir.local with PID 10042 (/Users/gangmingyu/Desktop/intellijwork/simple-blog/build/classes/kotlin/main started by gangmingyu in /Users/gangmingyu/Desktop/intellijwork/simple-blog) 
[2022-08-01 02:33:23:487][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStartupProfileInfo[0;39m 
 No active profile set, falling back to 1 default profile: "default" 
[2022-08-01 02:33:23:492][background-preinit] [32m INFO[0;39m o.h.validator.internal.util.Version [36mo.h.v.i.u.Version[0;39m [32m<clinit>[0;39m 
 HV000001: Hibernate Validator 6.2.3.Final 
[2022-08-01 02:33:24:1123][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
[2022-08-01 02:33:24:1193][main] [32m INFO[0;39m o.s.d.r.c.RepositoryConfigurationDelegate [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m [32mregisterRepositoriesIn[0;39m 
 Finished Spring Data repository scanning in 59 ms. Found 2 JPA repository interfaces. 
[2022-08-01 02:33:24:1535][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32minitialize[0;39m 
 Tomcat initialized with port(s): 9000 (http) 
[2022-08-01 02:33:24:1542][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Initializing ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:33:24:1542][main] [32m INFO[0;39m o.a.catalina.core.StandardService [36mo.a.c.c.StandardService[0;39m [32mlog[0;39m 
 Starting service [Tomcat] 
[2022-08-01 02:33:24:1542][main] [32m INFO[0;39m o.a.catalina.core.StandardEngine [36mo.a.c.c.StandardEngine[0;39m [32mlog[0;39m 
 Starting Servlet engine: [Apache Tomcat/9.0.64] 
[2022-08-01 02:33:24:1614][main] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring embedded WebApplicationContext 
[2022-08-01 02:33:24:1614][main] [32m INFO[0;39m o.s.b.w.s.c.ServletWebServerApplicationContext [36mo.s.b.w.s.c.ServletWebServerApplicationContext[0;39m [32mprepareWebApplicationContext[0;39m 
 Root WebApplicationContext: initialization completed in 1091 ms 
[2022-08-01 02:33:25:1794][main] [32m INFO[0;39m o.h.jpa.internal.util.LogHelper [36mo.h.j.i.u.LogHelper[0;39m [32mlogPersistenceUnitInformation[0;39m 
 HHH000204: Processing PersistenceUnitInfo [name: default] 
[2022-08-01 02:33:25:1827][main] [32m INFO[0;39m org.hibernate.Version [36mo.h.Version[0;39m [32mlogVersion[0;39m 
 HHH000412: Hibernate ORM core version 5.6.9.Final 
[2022-08-01 02:33:25:1912][main] [32m INFO[0;39m o.h.annotations.common.Version [36mo.h.a.c.Version[0;39m [32m<clinit>[0;39m 
 HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
[2022-08-01 02:33:25:1949][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Starting... 
[2022-08-01 02:33:25:1981][main] [32m INFO[0;39m com.zaxxer.hikari.HikariDataSource [36mc.z.h.HikariDataSource[0;39m [32mgetConnection[0;39m 
 HikariPool-1 - Start completed. 
[2022-08-01 02:33:25:1989][main] [32m INFO[0;39m org.hibernate.dialect.Dialect [36mo.h.d.Dialect[0;39m [32m<init>[0;39m 
 HHH000400: Using dialect: org.hibernate.dialect.MariaDB53Dialect 
[2022-08-01 02:33:25:2301][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288805597 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:33:25:2304][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288805600 | took 1ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Post` where 1=0
select * from `kotilnblog`.`Post` where 1=0; 
[2022-08-01 02:33:25:2307][main] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 #1659288805603 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/kotilnblog?user=test&password=***&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
select * from `kotilnblog`.`Member` where 1=0
select * from `kotilnblog`.`Member` where 1=0; 
[2022-08-01 02:33:25:2308][main] [32m INFO[0;39m o.h.e.t.j.p.i.JtaPlatformInitiator [36mo.h.e.t.j.p.i.JtaPlatformInitiator[0;39m [32minitiateService[0;39m 
 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2022-08-01 02:33:25:2311][main] [32m INFO[0;39m o.s.o.j.LocalContainerEntityManagerFactoryBean [36mo.s.o.j.LocalContainerEntityManagerFactoryBean[0;39m [32mbuildNativeEntityManagerFactory[0;39m 
 Initialized JPA EntityManagerFactory for persistence unit 'default' 
[2022-08-01 02:33:26:2908][main] [32m INFO[0;39m o.a.coyote.http11.Http11NioProtocol [36mo.a.c.h.Http11NioProtocol[0;39m [32mlog[0;39m 
 Starting ProtocolHandler ["http-nio-9000"] 
[2022-08-01 02:33:26:2920][main] [32m INFO[0;39m o.s.b.w.e.tomcat.TomcatWebServer [36mo.s.b.w.e.t.TomcatWebServer[0;39m [32mstart[0;39m 
 Tomcat started on port(s): 9000 (http) with context path '' 
[2022-08-01 02:33:26:2926][main] [32m INFO[0;39m c.e.s.SimpleBlogApplicationKt [36mc.e.s.SimpleBlogApplicationKt[0;39m [32mlogStarted[0;39m 
 Started SimpleBlogApplicationKt in 2.831 seconds (JVM running for 3.152) 
[2022-08-01 02:33:30:7048][http-nio-9000-exec-1] [32m INFO[0;39m o.a.c.c.C.[Tomcat].[localhost].[/] [36mo.a.c.c.C.[.[.[/][0;39m [32mlog[0;39m 
 Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2022-08-01 02:33:30:7049][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Initializing Servlet 'dispatcherServlet' 
[2022-08-01 02:33:30:7056][http-nio-9000-exec-1] [32m INFO[0;39m o.s.web.servlet.DispatcherServlet [36mo.s.w.s.DispatcherServlet[0;39m [32minitServletBean[0;39m 
 Completed initialization in 7 ms 
[2022-08-01 02:33:30:7128][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:33:30 | OperationTime : 0ms|
HeFormatSql(P6Spy sql,Hibernate format):
    select
        member0_.`id` as id1_1_0_,
        member0_.`create_at` as create_a2_1_0_,
        member0_.`update_at` as update_a3_1_0_,
        member0_.`email` as email4_1_0_,
        member0_.`password` as password5_1_0_,
        member0_.`role` as role6_1_0_ 
    from
        `Member` member0_ 
    where
        member0_.`id`=1000 
[2022-08-01 02:33:30:7134][http-nio-9000-exec-1] [32m INFO[0;39m p6spy [36mp6spy[0;39m [32mlogSQL[0;39m 
 22.08.01 02:33:30 | OperationTime : 0ms 
[2022-08-01 02:33:30:7137][http-nio-9000-exec-1] [31mERROR[0;39m c.e.s.e.GlobalExceptionHandler [36mc.e.s.e.GlobalExceptionHandler[0;39m [32mhandleEntityNotFoundException[0;39m 
 handleMethodArgumentNotValidException com.example.simpleblog.exception.MemberNotFoundException: 1000 not found 
